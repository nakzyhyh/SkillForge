window.definitions = {
    // =======================================================
    // LERNFELD 1: Das Unternehmen und die eigene Rolle im Betrieb
    // =======================================================
    'linienorganisation': {
        title: 'Linien-, Stab- & Matrixorganisation',
        pr√ºfungsteil: 'AP1',
        content: `
            <div class="popup-section">
                <div class="popup-section-title">üìö √úberblick</div>
                <p>Organisationsstrukturen legen fest, wie Aufgaben, Kompetenzen und Verantwortlichkeiten in einem Unternehmen verteilt sind. Die drei wichtigsten Grundformen sind die Linien-, Stab- und Matrixorganisation.</p>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">üìä Vergleich der Strukturen</div>
                <table class="comparison-table">
                    <thead>
                        <tr>
                            <th>Merkmal</th>
                            <th>Linienorganisation</th>
                            <th>Stabsorganisation</th>
                            <th>Matrixorganisation</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><strong>Prinzip</strong></td>
                            <td>Einliniensystem (jeder hat <em>einen</em> Chef)</td>
                            <td>Erweitertes Einliniensystem mit beratenden St√§ben</td>
                            <td>Mehrliniensystem (jeder hat <em>zwei</em> Chefs)</td>
                        </tr>
                        <tr>
                            <td><strong>Weisungsbefugnis</strong></td>
                            <td>Klar & eindeutig von oben nach unten</td>
                            <td>Linie hat Weisungsbefugnis, Stab nur Beratungsfunktion</td>
                            <td>Geteilte Weisungsbefugnis (funktional & projektbezogen)</td>
                        </tr>
                        <tr>
                            <td><strong>Vorteil</strong></td>
                            <td>Klare Struktur, eindeutige Verantwortung</td>
                            <td>Entlastung der F√ºhrung, besseres Fachwissen</td>
                            <td>Hohe Flexibilit√§t, optimale Ressourcennutzung</td>
                        </tr>
                        <tr>
                            <td><strong>Nachteil</strong></td>
                            <td>Lange Dienstwege, unflexibel</td>
                            <td>Konflikte zwischen Stab und Linie, hohe Kosten</td>
                            <td>Kompetenzkonflikte, hoher Kommunikationsaufwand</td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div class="example-box">
                <strong>üíª IT-Beispiel:</strong><br>
                Ein Azubi in der <strong>Linienorganisation</strong> berichtet nur an seinen Ausbilder. In der <strong>Stabsorganisation</strong> k√∂nnte ein Datenschutz-Stab den IT-Leiter beraten. In der <strong>Matrixorganisation</strong> arbeitet der Azubi f√ºr seinen Ausbilder (Linie) UND f√ºr einen Projektleiter (Projekt).
            </div>
        `,
        flashcard: { question: "Was ist der Hauptunterschied in der Weisungsbefugnis zwischen Linien- und Matrixorganisation?", answer: "Linie: Ein Vorgesetzter (Einliniensystem). Matrix: Zwei Vorgesetzte (Mehrliniensystem)." }
    },
    'projektorganisation': {
        title: 'Projekt- vs. Linienorganisation',
        pr√ºfungsteil: 'AP1',
        content: `
            <div class="popup-section">
                <div class="popup-section-title">üìö Definition</div>
                <p>Die <strong>Linienorganisation</strong> ist die dauerhafte, hierarchische Grundstruktur eines Unternehmens f√ºr das Tagesgesch√§ft. Die <strong>Projektorganisation</strong> ist eine tempor√§re, oft bereichs√ºbergreifende Struktur, die f√ºr die Dauer eines bestimmten, einmaligen Projekts geschaffen wird.</p>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">üìä Gegen√ºberstellung</div>
                <table class="comparison-table">
                    <thead><tr><th>Kriterium</th><th>Linienorganisation</th><th>Projektorganisation</th></tr></thead>
                    <tbody>
                        <tr><td><strong>Dauer</strong></td><td>Dauerhaft</td><td>Tempor√§r, zeitlich befristet</td></tr>
                        <tr><td><strong>Zweck</strong></td><td>Abwicklung des Tagesgesch√§fts</td><td>Erreichung eines einmaligen, spezifischen Ziels</td></tr>
                        <tr><td><strong>Struktur</strong></td><td>Hierarchisch, stabil</td><td>Flexibel, oft teamorientiert</td></tr>
                        <tr><td><strong>Mitarbeiter</strong></td><td>Feste Abteilungszugeh√∂rigkeit</td><td>Tempor√§re Zuordnung aus verschiedenen Abteilungen</td></tr>
                    </tbody>
                </table>
            </div>
            <div class="example-box">
                <strong>üí° Beispiel:</strong> Das Entwickler-Team (Linie) wartet bestehende Software. F√ºr die Entwicklung einer neuen App wird ein Projektteam (Projektorganisation) mit Mitgliedern aus Entwicklung, Marketing und Design gebildet. Nach dem Launch wird das Projektteam aufgel√∂st.
            </div>
        `,
        flashcard: { question: "Was ist der Hauptunterschied bez√ºglich der Dauer zwischen Linien- und Projektorganisation?", answer: "Linienorganisation ist dauerhaft, Projektorganisation ist tempor√§r f√ºr die Dauer eines Projekts." }
    },
    'kommunikationswege': {
        title: 'Kommunikations- & Entscheidungsprozesse',
        pr√ºfungsteil: 'AP1',
        content: `
            <div class="popup-section">
                <div class="popup-section-title">üó£Ô∏è Kommunikationswege</div>
                <p>Beschreiben, wie Informationen im Unternehmen flie√üen.</p>
                <ul>
                    <li><strong>Top-Down:</strong> Von der F√ºhrung zu den Mitarbeitern (z.B. Anweisungen, Unternehmensziele). Der klassische "Dienstweg".</li>
                    <li><strong>Bottom-Up:</strong> Von Mitarbeitern zur F√ºhrung (z.B. Feedback, Statusberichte, Probleme). Wichtig f√ºr agile Prozesse.</li>
                    <li><strong>Horizontal:</strong> Zwischen Kollegen auf derselben Ebene (z.B. Abstimmung zwischen Entwicklung und Testing).</li>
                </ul>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">üéØ Entscheidungsprozesse</div>
                <p>Strukturierte Vorgehensweise, um eine Wahl zwischen Alternativen zu treffen.</p>
                <ol>
                    <li><strong>Problem erkennen:</strong> Was ist die Herausforderung? (z.B. "Unser Backupsystem ist veraltet.")</li>
                    <li><strong>Informationen sammeln:</strong> Fakten und Daten zusammentragen (z.B. Kosten, technische Anforderungen, Recovery-Zeiten).</li>
                    <li><strong>Alternativen entwickeln:</strong> M√∂gliche L√∂sungswege aufzeigen (z.B. Make-or-Buy, Cloud vs. On-Premise).</li>
                    <li><strong>Alternativen bewerten:</strong> Vor- und Nachteile abw√§gen (z.B. mittels Nutzwertanalyse, TCO-Rechnung).</li>
                    <li><strong>Entscheidung treffen:</strong> Die beste Alternative ausw√§hlen.</li>
                    <li><strong>Umsetzung & Kontrolle:</strong> Die Entscheidung ausf√ºhren und den Erfolg √ºberpr√ºfen (z.B. ROI-Analyse, Sicherstellung der RTO/RPO).</li>
                </ol>
            </div>
        `,
        flashcard: { question: "Nenne die ersten drei Schritte eines typischen Entscheidungsprozesses.", answer: "1. Problem erkennen, 2. Informationen sammeln, 3. Alternativen entwickeln." }
    },
    'it-abteilung': {
        title: 'Rolle der IT-Abteilung',
        pr√ºfungsteil: 'AP1',
        content: `
            <div class="popup-section">
                <div class="popup-section-title">üè¢ Die IT im Unternehmen</div>
                <p>Die IT-Abteilung ist heute meist mehr als nur ein "Reparaturservice". Sie agiert als interner Dienstleister und strategischer Partner f√ºr andere Abteilungen, um Gesch√§ftsprozesse zu optimieren und zu digitalisieren.</p>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">üîß Kernaufgaben</div>
                <ul>
                    <li><strong>Infrastruktur-Management:</strong> Bereitstellung und Wartung von Servern, Netzwerken, Clients und der Cloud-Umgebung.</li>
                    <li><strong>Anwendungsbetreuung:</strong> Support und Weiterentwicklung von Unternehmenssoftware (z.B. ERP-System, CRM).</li>
                    <li><strong>User-Support (Helpdesk/Servicedesk):</strong> Anlaufstelle f√ºr Mitarbeiter bei IT-Problemen und Serviceanfragen.</li>
                    <li><strong>IT-Sicherheit:</strong> Schutz der Unternehmensdaten und -systeme (Firewalls, Virenschutz, Backups, Notfallpl√§ne).</li>
                    <li><strong>Projektmanagement:</strong> Planung und Durchf√ºhrung von IT-Projekten (z.B. Einf√ºhrung neuer Software).</li>
                    <li><strong>Beratung (Business Alignment):</strong> Unterst√ºtzung anderer Abteilungen bei der Digitalisierung ihrer Prozesse.</li>
                </ul>
            </div>
        `,
        flashcard: { question: "Nenne drei Kernaufgaben einer IT-Abteilung.", answer: "Infrastruktur-Management, Anwendungsbetreuung und IT-Sicherheit." }
    },
    'cpm': {
        title: 'Critical Path Method (CPM)',
        pr√ºfungsteil: 'AP1',
        content: `
            <div class="popup-section">
                <div class="popup-section-title">üìö Definition</div>
                <p>Die <strong>Critical Path Method (CPM)</strong> oder Methode des kritischen Pfades ist eine Technik zur Analyse und Planung von Projektabl√§ufen. Ihr Ziel ist es, die l√§ngste Kette voneinander abh√§ngiger Vorg√§nge zu identifizieren.</p>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">üéØ Kernkonzept</div>
                <p>Der <strong>kritische Pfad</strong> ist die Kette von Vorg√§ngen, die die minimale Gesamtdauer des Projekts bestimmt. Vorg√§nge auf diesem Pfad haben <strong>keinen Puffer (Pufferzeit = 0)</strong>. Jede Verz√∂gerung bei einem dieser Vorg√§nge verz√∂gert das gesamte Projekt.</p>
            </div>
            <div class="example-box">
                <strong>üí° Beispiel:</strong> Stell dir vor, du baust ein Haus. Das Legen des Fundaments ist auf dem kritischen Pfad. Wenn sich das um 2 Tage verz√∂gert, verz√∂gert sich das gesamte Bauprojekt um 2 Tage. Das Streichen der W√§nde im Inneren hat vielleicht Puffer, da es parallel zu Arbeiten am Dach stattfinden kann.
            </div>
        `,
        flashcard: { question: "Was charakterisiert Vorg√§nge auf dem kritischen Pfad?", answer: "Sie haben keine Pufferzeit (Puffer = 0). Eine Verz√∂gerung bei ihnen verz√∂gert das gesamte Projekt." }
    },
    'vorgangsknoten': {
        title: 'Vorgangsknoten-Netzpl√§ne',
        pr√ºfungsteil: 'AP1',
        content: `
            <div class="popup-section">
                <div class="popup-section-title">üìä Visualisierung</div>
                <p>Im <strong>Vorgangsknoten-Netzplan</strong> wird jeder Vorgang (jede Aufgabe) als Knoten (meist ein Rechteck) dargestellt. Die Pfeile zwischen den Knoten zeigen die Abh√§ngigkeiten an.</p>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">üñºÔ∏è Aufbau eines Knotens</div>
                <div style="border: 2px solid; border-radius: 8px; padding: 10px; text-align: center;">
                    <table style="width:100%; font-size: 0.8em; text-align: center; border-collapse: collapse;">
                        <tr>
                            <td style="border: 1px solid; padding: 5px;">FAZ</td>
                            <td style="border: 1px solid; padding: 5px;">Dauer</td>
                            <td style="border: 1px solid; padding: 5px;">FEZ</td>
                        </tr>
                        <tr>
                            <td colspan="3" style="border: 1px solid; padding: 10px; font-weight: bold;">Vorgangsbezeichnung</td>
                        </tr>
                        <tr>
                            <td style="border: 1px solid; padding: 5px;">SAZ</td>
                            <td style="border: 1px solid; padding: 5px;">GP</td>
                            <td style="border: 1px solid; padding: 5px;">SEZ</td>
                        </tr>
                    </table>
                </div>
            </div>
            <div class="popup-section">
                 <div class="popup-section-title">üìú Legende</div>
                 <ul>
                    <li><strong>FAZ:</strong> Fr√ºhester Anfangszeitpunkt</li>
                    <li><strong>FEZ:</strong> Fr√ºhester Endzeitpunkt</li>
                    <li><strong>SAZ:</strong> Sp√§tester Anfangszeitpunkt</li>
                    <li><strong>SEZ:</strong> Sp√§tester Endzeitpunkt</li>
                    <li><strong>Dauer:</strong> Dauer des Vorgangs</li>
                    <li><strong>GP:</strong> Gesamtpuffer</li>
                 </ul>
            </div>
        `,
        flashcard: { question: "Was repr√§sentiert ein Knoten in einem Vorgangsknoten-Netzplan?", answer: "Einen einzelnen Vorgang bzw. eine Aufgabe im Projekt." }
    },
    'frueheste-termine': {
        title: 'Fr√ºheste/Sp√§teste Termine (Vorw√§rts- & R√ºckw√§rtsrechnung)',
        pr√ºfungsteil: 'AP1',
        content: `
            <div class="popup-section">
                <div class="popup-section-title">‚û°Ô∏è Vorw√§rtsrechnung (Fr√ºheste Termine)</div>
                <p>Man rechnet vom Projektstart zum Projektende, um die fr√ºhestm√∂glichen Zeitpunkte zu ermitteln.</p>
                <ul>
                    <li><strong>FAZ (Fr√ºhester Anfangszeitpunkt):</strong> Der h√∂chste FEZ aller direkten Vorg√§nger. F√ºr den Startknoten ist FAZ = 0.</li>
                    <li><strong>FEZ (Fr√ºhester Endzeitpunkt):</strong> Berechnet sich aus <strong>FAZ + Dauer</strong>.</li>
                </ul>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">‚¨ÖÔ∏è R√ºckw√§rtsrechnung (Sp√§teste Termine)</div>
                <p>Man rechnet vom Projektende zum Projektstart, um die sp√§testzul√§ssigen Zeitpunkte zu ermitteln, ohne das Projekt zu verz√∂gern.</p>
                <ul>
                    <li><strong>SEZ (Sp√§tester Endzeitpunkt):</strong> Der niedrigste SAZ aller direkten Nachfolger. F√ºr den Endknoten gilt SEZ = FEZ.</li>
                    <li><strong>SAZ (Sp√§tester Anfangszeitpunkt):</strong> Berechnet sich aus <strong>SEZ - Dauer</strong>.</li>
                </ul>
            </div>
        `,
        flashcard: { question: "Wie berechnet man den FEZ (Fr√ºhesten Endzeitpunkt) eines Vorgangs?", answer: "FEZ = FAZ (Fr√ºhester Anfangszeitpunkt) + Dauer." }
    },
    'pufferzeiten': {
        title: 'Pufferzeiten',
        pr√ºfungsteil: 'AP1',
        content: `
            <div class="popup-section">
                <div class="popup-section-title">üìö Definition</div>
                <p>Die <strong>Pufferzeit</strong> ist der Zeitraum, um den ein Vorgang verschoben oder verl√§ngert werden kann, ohne die Gesamtdauer des Projekts zu gef√§hrden.</p>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">üßÆ Berechnung des Gesamtpuffers (GP)</div>
                <p>Der Gesamtpuffer gibt die maximale Zeit an, die ein Vorgang ben√∂tigen darf, ohne das Projektende zu verschieben.</p>
                <div class="formula-box">
                    GP = SAZ - FAZ <br>
                    <em>oder</em><br>
                    GP = SEZ - FEZ
                </div>
            </div>
            <div class="example-box">
                <strong>‚ùó Wichtig:</strong> Vorg√§nge auf dem kritischen Pfad haben immer einen Gesamtpuffer von <strong>0</strong>.
            </div>
        `,
        flashcard: { question: "Wie hoch ist der Gesamtpuffer (GP) eines Vorgangs auf dem kritischen Pfad?", answer: "Genau 0." }
    },
    'ressourcenplanung': {
        title: 'Ressourcenplanung',
        pr√ºfungsteil: 'AP1',
        content: `
             <div class="popup-section">
                <div class="popup-section-title">üìö Definition</div>
                <p>Die <strong>Ressourcenplanung</strong> befasst sich mit der Identifizierung, Zuweisung und Steuerung der f√ºr ein Projekt ben√∂tigten Ressourcen.</p>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">üìã Arten von Ressourcen</div>
                <ul>
                    <li><strong>Personal:</strong> Mitarbeiter mit bestimmten F√§higkeiten (z.B. Java-Entwickler, Netzwerktechniker).</li>
                    <li><strong>Sachmittel:</strong> Ger√§te, Maschinen, Softwarelizenzen, R√§ume.</li>
                    <li><strong>Finanzmittel:</strong> Das f√ºr das Projekt verf√ºgbare Budget.</li>
                </ul>
            </div>
             <div class="popup-section">
                <div class="popup-section-title">üéØ Ziele</div>
                <ul>
                    <li>Sicherstellen, dass die richtigen Ressourcen zur richtigen Zeit verf√ºgbar sind.</li>
                    <li>Vermeiden von <strong>Ressourcenkonflikten</strong> (z.B. ein Mitarbeiter ist f√ºr zwei Aufgaben gleichzeitig eingeplant).</li>
                    <li>Vermeiden von <strong>Ressourcen√ºberlastung</strong>.</li>
                    <li>Optimale Auslastung der Ressourcen.</li>
                </ul>
            </div>
        `,
        flashcard: { question: "Was ist ein Hauptziel der Ressourcenplanung?", answer: "Die Vermeidung von Ressourcenkonflikten und √úberlastung." }
    },
    'teambildungsphasen': {
        title: 'Teambildungsphasen nach Tuckman',
        pr√ºfungsteil: 'AP1',
        content: `
            <div class="popup-section">
                <div class="popup-section-title">üìö Das Modell</div>
                <p>Bruce Tuckman beschrieb 5 Phasen, die Teams typischerweise durchlaufen, um leistungsf√§hig zu werden.</p>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">üîÑ Die 5 Phasen</div>
                <ol>
                    <li><strong>Forming (Orientierungsphase):</strong> Das Team lernt sich kennen. Man ist h√∂flich, unsicher, und die Aufgaben sind noch unklar.</li>
                    <li><strong>Storming (Konfliktphase):</strong> Es kommt zu Konflikten um Rollen, Ziele und Vorgehensweisen. Cliquen k√∂nnen sich bilden. Diese Phase ist entscheidend f√ºr die sp√§tere Leistungsf√§higkeit.</li>
                    <li><strong>Norming (Organisationsphase):</strong> Das Team einigt sich auf gemeinsame Regeln, Strukturen und Arbeitsweisen. Der Teamgeist w√§chst.</li>
                    <li><strong>Performing (Leistungsphase):</strong> Das Team arbeitet effizient und zielorientiert zusammen. Probleme werden konstruktiv gel√∂st. Die Energie flie√üt in die Aufgabe.</li>
                    <li><strong>Adjourning (Aufl√∂sungsphase):</strong> Nach Projektende wird das Team aufgel√∂st. Es kommt zu einer emotionalen Phase des Abschieds.</li>
                </ol>
            </div>
            <div class="example-box">
                <strong>üí° Pr√ºfungsfrage:</strong> "Ein neues Projektteam streitet st√§ndig √ºber die richtige Programmiersprache. In welcher Phase nach Tuckman befindet sich das Team?"<br><strong>Antwort:</strong> Storming.
            </div>
        `,
        flashcard: { question: "Welche Phase nach Tuckman ist durch Konflikte um Rollen und Ziele gekennzeichnet?", answer: "Storming (Konfliktphase)." }
    },
    'kommunikationsmodelle': {
        title: 'Kommunikationsmodelle (4-Ohren-Modell)',
        pr√ºfungsteil: 'AP1',
        content: `
            <div class="popup-section">
                <div class="popup-section-title">üìö Das 4-Ohren-Modell</div>
                <p>Entwickelt von Friedemann Schulz von Thun, besagt dieses Modell, dass <strong>jede Nachricht vier Ebenen (oder "Ohren")</strong> hat, auf denen sie gesendet und empfangen werden kann. Missverst√§ndnisse entstehen, wenn Sender und Empf√§nger auf unterschiedlichen Ebenen kommunizieren.</p>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">üëÇ Die vier Ebenen</div>
                <table class="comparison-table">
                    <thead><tr><th>Ebene</th><th>Was wird √ºbermittelt?</th><th>Beispiel: "Die Ampel ist gr√ºn."</th></tr></thead>
                    <tbody>
                        <tr><td><strong>Sachebene</strong></td><td>Die reine Information, Daten & Fakten.</td><td>"Die Ampel zeigt die Farbe Gr√ºn."</td></tr>
                        <tr><td><strong>Selbstoffenbarung</strong></td><td>Was der Sender √ºber sich selbst verr√§t (Gef√ºhle, Zustand).</td><td>"Ich habe es eilig."</td></tr>
                        <tr><td><strong>Beziehungsebene</strong></td><td>Was der Sender vom Empf√§nger h√§lt und wie er zu ihm steht.</td><td>"Du brauchst meine Hilfe beim Fahren."</td></tr>
                        <tr><td><strong>Appellebene</strong></td><td>Wozu der Sender den Empf√§nger veranlassen m√∂chte.</td><td>"Fahr los!"</td></tr>
                    </tbody>
                </table>
            </div>
            <div class="example-box">
                <strong>‚ö†Ô∏è Konfliktpotenzial:</strong> Der Fahrer (Sender) sagt "Die Ampel ist gr√ºn." (Sachebene). Die Beifahrerin (Empf√§nger) h√∂rt es auf der Beziehungsebene ("Du h√§ltst mich f√ºr eine schlechte Fahrerin!") und reagiert ver√§rgert, obwohl nur eine Information gemeint war.
            </div>
        `,
        flashcard: { question: "Nenne die vier Ebenen (Ohren) des Kommunikationsmodells von Schulz von Thun.", answer: "Sachebene, Selbstoffenbarung, Beziehungsebene und Appellebene." }
    },
    'scrum_kanban': {
        title: 'Scrum und Kanban Grundlagen',
        pr√ºfungsteil: 'AP1',
        content: `
            <div class="popup-section">
                <div class="popup-section-title"> agile Methoden</div>
                <p>Scrum und Kanban sind die popul√§rsten agilen Vorgehensmodelle, die auf Flexibilit√§t, kontinuierliche Verbesserung und schnelle Reaktionsf√§higkeit auf √Ñnderungen setzen.</p>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">üìä Vergleich</div>
                <table class="comparison-table">
                    <thead><tr><th>Aspekt</th><th>Scrum</th><th>Kanban</th></tr></thead>
                    <tbody>
                        <tr><td><strong>Grundprinzip</strong></td><td>Arbeit in festen Zyklen (Sprints)</td><td>Kontinuierlicher Fluss der Arbeit (Flow)</td></tr>
                        <tr><td><strong>Rollen</strong></td><td>Fest definiert: Product Owner, Scrum Master, Entwicklungsteam</td><td>Keine festen Rollen vorgeschrieben</td></tr>
                        <tr><td><strong>Arbeitseinheiten</strong></td><td>Sprint Backlog wird zu Beginn des Sprints festgelegt</td><td>Aufgaben werden einzeln aus einem Backlog gezogen (Pull-Prinzip)</td></tr>
                        <tr><td><strong>Meetings</strong></td><td>Festgelegt: Sprint Planning, Daily Scrum, Sprint Review, Retrospective</td><td>Keine festen Meetings, oft aber "Stand-ups"</td></tr>
                        <tr><td><strong>Fokus</strong></td><td>Ein "potenziell auslieferbares Inkrement" am Ende jedes Sprints</td><td>Visualisierung des Workflows, Begrenzung der parallelen Arbeit (WIP-Limits)</td></tr>
                    </tbody>
                </table>
            </div>
            <div class="example-box">
                <strong>Scrum</strong> ist wie ein Restaurant, das alle 2 Wochen ein neues Men√º plant und kocht. <strong>Kanban</strong> ist wie eine Sushi-Bar, bei der die K√∂che kontinuierlich die Teller auf dem Laufband nachf√ºllen, sobald einer genommen wird.
            </div>
        `,
        flashcard: { question: "Was ist der Hauptunterschied zwischen Scrum und Kanban bez√ºglich der Arbeitsweise?", answer: "Scrum arbeitet in festen Zyklen (Sprints), Kanban in einem kontinuierlichen Fluss (Flow)." }
    },
    'feedback-techniken': {
        title: 'Feedback-Techniken',
        pr√ºfungsteil: 'AP1',
        content: `
            <div class="popup-section">
                <div class="popup-section-title">üìö Ziel von Feedback</div>
                <p>Konstruktives Feedback soll eine Verhaltens√§nderung oder -best√§tigung bewirken, ohne die Beziehung zu belasten. Es sollte immer beschreibend, konkret und subjektiv ("Ich-Botschaften") sein.</p>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">ü•™ Sandwich-Methode</div>
                <p>Eine popul√§re, aber auch umstrittene Methode, bei der Kritik zwischen zwei positive Anmerkungen "verpackt" wird.</p>
                <ol>
                    <li><strong>Positiver Einstieg:</strong> "Ich finde es super, wie engagiert du im Projekt bist."</li>
                    <li><strong>Konstruktive Kritik:</strong> "Mir ist aufgefallen, dass du in den letzten Meetings oft andere unterbrichst. Auf mich wirkt das so, als ob du ihre Ideen nicht wertsch√§tzt."</li>
                    <li><strong>Positiver Abschluss:</strong> "Ich bin aber zuversichtlich, dass wir das als Team gut hinbekommen."</li>
                </ol>
                <p><strong>‚ö†Ô∏è Kritik an der Methode:</strong> Die positiven Aussagen k√∂nnen unaufrichtig wirken und die eigentliche Kritik wird eventuell nicht ernst genommen.</p>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">‚≠ê WWW-Feedback</div>
                <p>Eine alternative, oft als besser empfundene Methode:</p>
                <ul>
                    <li><strong>Wahrnehmung:</strong> Was habe ich konkret beobachtet? ("Ich habe gesehen, dass die Dokumentation f√ºr Modul X fehlt.")</li>
                    <li><strong>Wirkung:</strong> Welche Wirkung hatte das auf mich/das Team? ("Das hat bei mir dazu gef√ºhrt, dass ich eine Stunde l√§nger gebraucht habe, um die Schnittstelle zu verstehen.")</li>
                    <li><strong>Wunsch:</strong> Was w√ºnsche ich mir f√ºr die Zukunft? ("Ich w√ºnsche mir, dass wir vereinbaren, die Doku direkt nach der Implementierung zu schreiben.")</li>
                </ul>
            </div>
        `,
        flashcard: { question: "Beschreibe das WWW-Feedback-Modell.", answer: "Wahrnehmung (Was habe ich beobachtet?), Wirkung (Wie hat es auf mich gewirkt?), Wunsch (Was w√ºnsche ich mir?)." }
    },
    'arbeitszeiten': {
        title: 'Arbeitszeiten & Ruhepausen (ArbZG)',
        pr√ºfungsteil: 'AP1',
        content: `
            <div class="popup-section">
                <div class="popup-section-title">‚öñÔ∏è Arbeitszeitgesetz (ArbZG)</div>
                <p>Das ArbZG regelt die grundlegenden Rechte und Pflichten bez√ºglich der Arbeitszeit in Deutschland zum Schutz der Arbeitnehmer.</p>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">‚è∞ Kernaussagen</div>
                <ul>
                    <li><strong>T√§gliche Arbeitszeit:</strong> Grunds√§tzlich max. <strong>8 Stunden</strong> pro Werktag.</li>
                    <li><strong>Verl√§ngerung:</strong> Kann auf bis zu <strong>10 Stunden</strong> verl√§ngert werden, wenn innerhalb von 6 Monaten ein Durchschnitt von 8 Stunden pro Werktag nicht √ºberschritten wird.</li>
                    <li><strong>Ruhepausen:</strong>
                        <ul>
                            <li>Bei 6 bis 9 Stunden Arbeit: mind. <strong>30 Minuten</strong> Pause.</li>
                            <li>Bei √ºber 9 Stunden Arbeit: mind. <strong>45 Minuten</strong> Pause.</li>
                            <li>Die Pausen k√∂nnen in Bl√∂cke von je 15 Minuten aufgeteilt werden.</li>
                        </ul>
                    </li>
                    <li><strong>Ruhezeit:</strong> Nach Beendigung der t√§glichen Arbeitszeit muss eine ununterbrochene Ruhezeit von mind. <strong>11 Stunden</strong> gew√§hrt werden.</li>
                </ul>
            </div>
        `,
        flashcard: { question: "Wie lange ist die gesetzliche Mindestruhezeit zwischen zwei Arbeitstagen?", answer: "11 Stunden." }
    },
    'software-lizenzen': {
        title: 'Software-Lizenzarten',
        pr√ºfungsteil: 'AP1',
        content: `
            <div class="popup-section">
                <div class="popup-section-title">üìö Lizenz-Grundlagen</div>
                <p>Eine Software-Lizenz ist ein Vertrag, der die Nutzungsrechte f√ºr eine Software regelt. Man unterscheidet grob zwischen propriet√§rer und freier/Open-Source-Software.</p>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">üìä Lizenztypen im Vergleich</div>
                <table class="comparison-table">
                    <thead><tr><th>Typ</th><th>Beschreibung</th><th>Beispiel</th></tr></thead>
                    <tbody>
                        <tr>
                            <td><strong>Propriet√§r</strong></td>
                            <td>Quellcode ist geheim, Nutzung stark eingeschr√§nkt (oft pro Nutzer/Ger√§t), meist kostenpflichtig.</td>
                            <td>Microsoft Windows, Adobe Photoshop</td>
                        </tr>
                        <tr>
                            <td><strong>Freeware</strong></td>
                            <td>Kostenlos nutzbar, aber oft mit eingeschr√§nkten Rechten (z.B. nur f√ºr private Nutzung). Quellcode nicht einsehbar.</td>
                            <td>CCleaner (Free Version)</td>
                        </tr>
                        <tr>
                            <td><strong>Open Source (Permissive)</strong></td>
                            <td>Quellcode ist offen. Software darf frei genutzt, ver√§ndert und weitergegeben werden, auch in kommerziellen Produkten. Wenig Pflichten.</td>
                            <td>MIT Lizenz, Apache 2.0</td>
                        </tr>
                        <tr>
                            <td><strong>Open Source (Copyleft)</strong></td>
                            <td>Quellcode ist offen. Abgeleitete Werke m√ºssen ebenfalls unter derselben oder einer kompatiblen Lizenz ver√∂ffentlicht werden.</td>
                            <td>GPL (GNU General Public License)</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        `,
        flashcard: { question: "Was ist der Hauptunterschied zwischen einer MIT-Lizenz und der GPL (Copyleft)?", answer: "Bei der GPL m√ºssen abgeleitete Werke ebenfalls unter der GPL ver√∂ffentlicht werden (Copyleft), bei MIT nicht." }
    },
    'dsgvo-artikel6': {
        title: 'DSGVO Art. 6 - Rechtm√§√üigkeit der Verarbeitung',
        pr√ºfungsteil: 'AP1',
        content: `
            <div class="popup-section">
                <div class="popup-section-title">‚öñÔ∏è Grundprinzip</div>
                <p>Die Verarbeitung personenbezogener Daten ist <strong>grunds√§tzlich verboten</strong>, es sei denn, es liegt eine Erlaubnis vor. Artikel 6 der DSGVO listet diese Erlaubnistatbest√§nde auf.</p>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">‚úÖ Erlaubnistatbest√§nde (Auswahl)</div>
                <p>Die Verarbeitung ist nur rechtm√§√üig, wenn mindestens eine der folgenden Bedingungen erf√ºllt ist:</p>
                <ul>
                    <li><strong>Einwilligung (lit. a):</strong> Die betroffene Person hat ihre freiwillige und informierte Einwilligung gegeben.</li>
                    <li><strong>Vertragserf√ºllung (lit. b):</strong> Die Verarbeitung ist f√ºr die Erf√ºllung eines Vertrags (z.B. Arbeitsvertrag, Kaufvertrag) notwendig.</li>
                    <li><strong>Rechtliche Verpflichtung (lit. c):</strong> Die Verarbeitung ist zur Erf√ºllung einer rechtlichen Pflicht erforderlich (z.B. steuerliche Aufbewahrungspflichten).</li>
                    <li><strong>Lebenswichtige Interessen (lit. d):</strong> Zum Schutz des Lebens oder der Gesundheit (z.B. Notfalldaten im Krankenhaus).</li>
                    <li><strong>Berechtigtes Interesse (lit. f):</strong> Die Verarbeitung ist zur Wahrung der berechtigten Interessen des Unternehmens erforderlich und die Interessen des Betroffenen √ºberwiegen nicht (z.B. Video√ºberwachung zur Diebstahlpr√§vention).</li>
                </ul>
            </div>
        `,
        flashcard: { question: "Nenne zwei Rechtsgrundlagen f√ºr die Verarbeitung personenbezogener Daten nach Art. 6 DSGVO.", answer: "Einwilligung der Person oder Notwendigkeit zur Vertragserf√ºllung." }
    },
    'it-sicherheitsgesetz': {
        title: 'IT-Sicherheitsgesetz (IT-SiG)',
        pr√ºfungsteil: 'AP1',
        content: `
            <div class="popup-section">
                <div class="popup-section-title">üìö Ziel des Gesetzes</div>
                <p>Das IT-Sicherheitsgesetz (aktuell IT-SiG 2.0) soll die Sicherheit informationstechnischer Systeme in Deutschland erh√∂hen. Ein besonderer Fokus liegt auf <strong>Kritischen Infrastrukturen (KRITIS)</strong>.</p>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">üè≠ Was ist KRITIS?</div>
                <p>Kritische Infrastrukturen sind Organisationen und Einrichtungen mit wichtiger Bedeutung f√ºr das staatliche Gemeinwesen, bei deren Ausfall oder Beeintr√§chtigung nachhaltig wirkende Versorgungsengp√§sse, erhebliche St√∂rungen der √∂ffentlichen Sicherheit oder andere dramatische Folgen eintreten w√ºrden.</p>
                <p><strong>Sektoren sind z.B.:</strong> Energie, Wasser, Ern√§hrung, Gesundheit, Transport, Finanzen und Informationstechnik.</p>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">üìã Hauptpflichten f√ºr KRITIS-Betreiber</div>
                <ul>
                    <li>Umsetzung von IT-Sicherheitsma√ünahmen nach dem <strong>Stand der Technik</strong>.</li>
                    <li>Regelm√§√üiger <strong>Nachweis</strong> der Umsetzung gegen√ºber dem BSI (Bundesamt f√ºr Sicherheit in der Informationstechnik).</li>
                    <li><strong>Meldung von erheblichen IT-St√∂rungen</strong> an das BSI.</li>
                    <li>Benennung einer zentralen <strong>Kontaktstelle</strong>.</li>
                </ul>
            </div>
        `,
        flashcard: { question: "Was versteht man unter KRITIS im Kontext des IT-Sicherheitsgesetzes?", answer: "Kritische Infrastrukturen (z.B. Energie, Wasser, Gesundheit), deren Ausfall dramatische Folgen h√§tte." }
    },

    // =======================================================
    // THEMA: HARDWARE & KONFIGURATION
    // =======================================================
    'hardware-komponenten': {
        title: 'Hardware-Komponenten & Systemarchitektur',
        pr√ºfungsteil: 'AP1',
        content: `
            <div class="popup-section">
                <div class="popup-section-title">üñ•Ô∏è Zentrale PC-Komponenten</div>
                 <table class="comparison-table">
                    <thead><tr><th>Komponente</th><th>Funktion & Wichtige Merkmale</th></tr></thead>
                    <tbody>
                        <tr><td><strong>CPU (Central Processing Unit)</strong></td><td>Das "Gehirn" des Computers. F√ºhrt Befehle aus. Kennzahlen: Taktfrequenz (GHz), Anzahl der Kerne, Cache.</td></tr>
                        <tr><td><strong>RAM (Random Access Memory)</strong></td><td>Fl√ºchtiger Arbeitsspeicher f√ºr aktive Programme & Daten. Kennzahlen: Kapazit√§t (GB), Geschwindigkeit (DDR-Typ, Taktrate).</td></tr>
                        <tr><td><strong>Storage (HDD/SSD)</strong></td><td>Nicht-fl√ºchtiger Speicher. HDD (mechanisch, g√ºnstig, langsam), SSD (elektronisch, schnell, teurer).</td></tr>
                        <tr><td><strong>GPU (Graphics Processing Unit)</strong></td><td>Spezialisiert auf die Berechnung von Grafikdaten. Wichtig f√ºr Gaming, Design, KI.</td></tr>
                    </tbody>
                </table>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">üîå Mainboard (Motherboard)</div>
                <p>Die zentrale Platine, die alle Komponenten verbindet. Es fungiert als R√ºckgrat des Computers.</p>
                <ul>
                    <li><strong>Prozessorsockel (CPU-Socket):</strong> Hier wird der Prozessor eingesetzt. Muss mit der CPU kompatibel sein.</li>
                    <li><strong>Chipsatz:</strong> Verbindet die CPU mit anderen Komponenten. Fr√ºher als North- und Southbridge bekannt, heute sind viele Funktionen direkt in die CPU integriert.</li>
                    <li><strong>Erweiterungssteckpl√§tze:</strong> Fr√ºher PCI, heute der viel schnellere <strong>PCIe (PCI Express)</strong> f√ºr Grafikkarten etc.</li>
                    <li><strong>Speicheranschl√ºsse:</strong> Fr√ºher IDE, heute <strong>SATA</strong> (f√ºr HDDs/SSDs) und <strong>NVMe (M.2)</strong> f√ºr extrem schnelle SSDs.</li>
                    <li><strong>BIOS/UEFI:</strong> Die Firmware des Mainboards. Das moderne <strong>UEFI</strong> (Unified Extensible Firmware Interface) hat das alte BIOS abgel√∂st und bietet eine grafische Oberfl√§che und mehr Funktionen.</li>
                </ul>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">‚öôÔ∏è Chronologischer Ablauf der CPU-Operationen</div>
                <p>Jeder Befehl, den eine CPU verarbeitet, durchl√§uft einen Zyklus aus mehreren Schritten (Pipeline):</p>
                <ol>
                    <li><strong>Instruction Fetch (Befehl holen):</strong> Der Befehl wird aus dem Speicher (RAM/Cache) geholt. Der <strong>Programmz√§hler (PC)</strong> zeigt dabei auf die Adresse des n√§chsten Befehls.</li>
                    <li><strong>Instruction Decode (Befehl dekodieren):</strong> Der Befehlsdecoder analysiert den Befehl und √ºbersetzt ihn in Steuersignale f√ºr die CPU.</li>
                    <li><strong>Execute (Ausf√ºhren):</strong> Die <strong>ALU (Arithmetic Logic Unit)</strong> f√ºhrt die eigentliche Operation aus (z.B. Addition, logisches UND).</li>
                    <li><strong>Write Back (R√ºckschreiben):</strong> Das Ergebnis der Operation wird zur√ºck in ein Register geschrieben, um f√ºr weitere Befehle verf√ºgbar zu sein.</li>
                </ol>
            </div>
        `,
        flashcard: { question: "Wodurch wurde das alte BIOS auf Mainboards ersetzt und welche Vorteile bietet es?", answer: "Durch UEFI (Unified Extensible Firmware Interface). Vorteile sind u.a. eine grafische Oberfl√§che und Unterst√ºtzung f√ºr gr√∂√üere Festplatten." }
    },
    'tco': {
        title: 'Total Cost of Ownership (TCO)',
        pr√ºfungsteil: 'AP1',
        content: `
            <div class="popup-section">
                <div class="popup-section-title">üìö Definition</div>
                <p>Der <strong>Total Cost of Ownership (TCO)</strong> ist eine Berechnungsmethode, die nicht nur die Anschaffungskosten, sondern <strong>alle Kosten</strong> ber√ºcksichtigt, die √ºber die gesamte Lebensdauer einer IT-Anschaffung anfallen.</p>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">‚ûï Kostenarten</div>
                <ul>
                    <li><strong>Direkte Kosten (sichtbar):</strong>
                        <ul>
                            <li>Anschaffung (Hardware, Software)</li>
                            <li>Installation & Implementierung</li>
                            <li>Wartung & Supportvertr√§ge</li>
                        </ul>
                    </li>
                    <li><strong>Indirekte Kosten (oft unsichtbar):</strong>
                        <ul>
                            <li>Personalkosten (Schulung, Administration)</li>
                            <li>Betriebskosten (Strom, K√ºhlung)</li>
                            <li>Ausfallzeiten & Produktivit√§tsverluste</li>
                            <li>Entsorgungskosten</li>
                        </ul>
                    </li>
                </ul>
            </div>
            <div class="example-box">
                <strong>üíª Beispiel:</strong> Ein "billiger" Server (geringe Anschaffungskosten) kann einen hohen TCO haben, wenn er viel Strom verbraucht und h√§ufig gewartet werden muss. Ein teurerer, energieeffizienter Server kann langfristig g√ºnstiger sein.
            </div>
        `,
        flashcard: { question: "Was betrachtet der TCO au√üer dem Kaufpreis?", answer: "Alle direkten und indirekten Kosten √ºber die gesamte Nutzungsdauer (z.B. Strom, Wartung, Personal)." }
    },
    'roi': {
        title: 'Return on Investment (ROI)',
        pr√ºfungsteil: 'AP1',
        content: `
            <div class="popup-section">
                <div class="popup-section-title">üìö Definition</div>
                <p>Der <strong>Return on Investment (ROI)</strong> ist eine Kennzahl, die die Rentabilit√§t einer Investition misst. Sie zeigt, wie viel Prozent des eingesetzten Kapitals als Gewinn zur√ºckgeflossen ist.</p>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">üßÆ Formel</div>
                <div class="formula-box">ROI (%) = (Gewinn / Investitionskosten) √ó 100</div>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">üéØ Interpretation</div>
                <ul>
                    <li><strong>ROI > 0%:</strong> Die Investition war rentabel.</li>
                    <li><strong>ROI = 0%:</strong> Weder Gewinn noch Verlust.</li>
                    <li><strong>ROI < 0%:</strong> Die Investition hat zu einem Verlust gef√ºhrt.</li>
                </ul>
            </div>
            <div class="example-box">
                <strong>üîß Beispiel:</strong> Eine Investition von 20.000 ‚Ç¨ in eine neue Software bringt einen Gewinn (z.B. durch Prozesseinsparungen) von 30.000 ‚Ç¨.<br>
                ROI = (30.000 ‚Ç¨ / 20.000 ‚Ç¨) √ó 100 = 150%.<br>
                Jeder investierte Euro hat 1,50 ‚Ç¨ Gewinn erbracht.
            </div>
        `,
        flashcard: { question: "Was bedeutet ein ROI von 200%?", answer: "Dass der Gewinn doppelt so hoch war wie die urspr√ºnglichen Investitionskosten." }
    },
    'amortisation': {
        title: 'Amortisationszeit (Payback Period)',
        pr√ºfungsteil: 'AP1',
        content: `
            <div class="popup-section">
                <div class="popup-section-title">üìö Definition</div>
                <p>Die <strong>Amortisationszeit</strong> gibt an, wie lange es dauert, bis die urspr√ºnglichen Anschaffungskosten einer Investition durch die daraus resultierenden Einnahmen oder Einsparungen (Cashflows) vollst√§ndig zur√ºckverdient sind.</p>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">üßÆ Formel (vereinfacht)</div>
                <div class="formula-box">Amortisationszeit (in Jahren) = Anschaffungskosten / J√§hrliche Einsparungen</div>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">üéØ Bedeutung</div>
                <p>Sie ist eine einfache Methode zur Risikobewertung: <strong>Je k√ºrzer die Amortisationszeit, desto schneller ist das investierte Kapital wieder "sicher" und desto geringer das Risiko.</strong></p>
            </div>
            <div class="example-box">
                <strong>üíª Beispiel:</strong> Ein neuer Server kostet 10.000 ‚Ç¨. Er spart pro Jahr 2.500 ‚Ç¨ an Strom- und Wartungskosten.<br>
                Amortisationszeit = 10.000 ‚Ç¨ / 2.500 ‚Ç¨ pro Jahr = 4 Jahre.
            </div>
        `,
        flashcard: { question: "Was sagt eine kurze Amortisationszeit aus?", answer: "Dass das investierte Kapital schnell zur√ºckflie√üt und das Risiko der Investition geringer ist." }
    },
    'make-or-buy': {
        title: 'Make-or-Buy-Entscheidung',
        pr√ºfungsteil: 'AP1',
        content: `
            <div class="popup-section">
                <div class="popup-section-title">üìö Definition</div>
                <p>Die <strong>Make-or-Buy-Entscheidung</strong> ist die strategische √úberlegung, ob ein Produkt oder eine Dienstleistung selbst erstellt (Make) oder von einem externen Anbieter eingekauft wird (Buy).</p>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">‚öñÔ∏è Entscheidungskriterien</div>
                <table class="comparison-table">
                    <thead><tr><th>Faktor</th><th>Pro "Make" (Selbstmachen)</th><th>Pro "Buy" (Einkaufen)</th></tr></thead>
                    <tbody>
                        <tr><td><strong>Kosten</strong></td><td>Langfristig potenziell g√ºnstiger, keine Gewinnmarge f√ºr Dritte.</td><td>Keine hohen Anfangsinvestitionen, Skaleneffekte des Anbieters.</td></tr>
                        <tr><td><strong>Know-how</strong></td><td>Schutz von Betriebsgeheimnissen, Aufbau eigener Kompetenzen.</td><td>Zugriff auf Expertenwissen, man muss nicht alles selbst k√∂nnen.</td></tr>
                        <tr><td><strong>Qualit√§t</strong></td><td>Volle Kontrolle √ºber den Prozess und die Qualit√§t.</td><td>Anbieter ist oft hochspezialisiert und liefert Top-Qualit√§t.</td></tr>
                        <tr><td><strong>Fokus</strong></td><td>Unabh√§ngigkeit von Lieferanten.</td><td>Konzentration auf das eigene Kerngesch√§ft.</td></tr>
                    </tbody>
                </table>
            </div>
            <div class="example-box">
                <strong>üíª IT-Beispiel:</strong> Soll ein Unternehmen seine eigene Buchhaltungssoftware entwickeln (Make) oder eine Standardl√∂sung wie DATEV oder SAP kaufen (Buy)?
            </div>
        `,
        flashcard: { question: "Nenne zwei Faktoren f√ºr eine Make-or-Buy-Entscheidung.", answer: "Kosten, Know-how, Qualit√§t, strategischer Fokus, verf√ºgbare Kapazit√§ten." }
    },
    'energiekosten': {
        title: 'Energiekosten-Berechnung',
        pr√ºfungsteil: 'AP1',
        content: `
            <div class="popup-section">
                <div class="popup-section-title">üìö Grundlage</div>
                <p>Die Berechnung der Energiekosten f√ºr IT-Ger√§te ist eine typische Pr√ºfungsaufgabe. Sie basiert auf der Leistung des Ger√§ts, der Nutzungsdauer und dem Strompreis.</p>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">üßÆ Formel</div>
                <div class="formula-box">
                    Gesamtkosten = (Leistung in kW √ó Nutzungsdauer in h) √ó Strompreis in ‚Ç¨/kWh
                </div>
                <p><strong>Wichtige Umrechnungen:</strong></p>
                <ul>
                    <li>1 Kilowatt (kW) = 1000 Watt (W)</li>
                    <li>Leistung (W) muss oft erst in kW umgerechnet werden: <strong>Watt / 1000 = Kilowatt</strong>.</li>
                </ul>
            </div>
            <div class="example-box">
                <strong>üíª Pr√ºfungsbeispiel:</strong><br>
                Ein Server hat eine Leistungsaufnahme von 200 Watt und l√§uft 24/7 (also 24h an 365 Tagen). Der Strompreis betr√§gt 0,30 ‚Ç¨/kWh.<br>
                1. <strong>Leistung in kW:</strong> 200 W / 1000 = 0,2 kW<br>
                2. <strong>Nutzungsstunden pro Jahr:</strong> 24 h/Tag √ó 365 Tage = 8760 h<br>
                3. <strong>Verbrauch in kWh:</strong> 0,2 kW √ó 8760 h = 1752 kWh<br>
                4. <strong>Jahreskosten:</strong> 1752 kWh √ó 0,30 ‚Ç¨/kWh = 525,60 ‚Ç¨
            </div>
        `,
        flashcard: { question: "Wie berechnet man die j√§hrlichen Stromkosten eines Ger√§ts?", answer: "(Leistung in kW * 8760 h) * Strompreis pro kWh." }
    },

    // =======================================================
    // THEMA: NETZWERKE (CLIENTS EINBINDEN)
    // =======================================================
    'ip-klassen-cidr': {
        title: 'IP-Klassen & CIDR',
        pr√ºfungsteil: 'AP1',
        content: `
            <div class="popup-section">
                <div class="popup-section-title">üìö Historische IP-Klassen</div>
                <p>Urspr√ºnglich wurden IPv4-Adressen in Klassen eingeteilt, um die Gr√∂√üe von Netzwerken festzulegen. Die Klasse wurde durch die ersten Bits der IP-Adresse bestimmt.</p>
                <table class="comparison-table">
                    <thead>
                        <tr>
                            <th>Klasse</th>
                            <th>Adressbereich</th>
                            <th>Standard-Subnetzmaske</th>
                            <th>Zweck</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><strong>Klasse A</strong></td>
                            <td>0.0.0.0 ‚Äì 127.255.255.255</td>
                            <td>255.0.0.0 (/8)</td>
                            <td>Sehr wenige, riesige Netzwerke (z.B. f√ºr gro√üe Konzerne, ISPs).</td>
                        </tr>
                        <tr>
                            <td><strong>Klasse B</strong></td>
                            <td>128.0.0.0 ‚Äì 191.255.255.255</td>
                            <td>255.255.0.0 (/16)</td>
                            <td>Mittelgro√üe Netzwerke (z.B. f√ºr Universit√§ten).</td>
                        </tr>
                        <tr>
                            <td><strong>Klasse C</strong></td>
                            <td>192.0.0.0 ‚Äì 223.255.255.255</td>
                            <td>255.255.255.0 (/24)</td>
                            <td>Sehr viele, kleine Netzwerke.</td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">üöÄ CIDR (Classless Inter-Domain Routing)</div>
                <p>Das starre Klassensystem war ineffizient und wurde durch <strong>CIDR</strong> abgel√∂st. Statt fester Klassen verwendet CIDR eine flexible <strong>Pr√§fixl√§nge</strong> (z.B. /25), um die Gr√∂√üe des Netzwerkanteils exakt zu definieren. Dies erm√∂glicht eine viel effizientere Vergabe von IP-Adressen.</p>
                <div class="example-box">
                    <strong>üí° Beispiel:</strong> Eine IP-Adresse 192.168.1.1 geh√∂rt nach dem alten System zur Klasse C. Mit CIDR k√∂nnte sie aber mit einer Subnetzmaske /16 (255.255.0.0) verwendet werden, was sie Teil eines viel gr√∂√üeren Netzwerks macht. CIDR ist heute der Standard.
                </div>
            </div>
        `,
        flashcard: { question: "Was ist der Hauptunterschied zwischen klassenbasierter Adressierung und CIDR?", answer: "Klassen (A, B, C) haben feste, vordefinierte Subnetzmasken. CIDR (Classless Inter-Domain Routing) verwendet eine flexible Pr√§fixl√§nge (z.B. /24, /26), um IP-Adressbereiche bedarfsgerecht und effizient zuzuweisen." }
    },
    'private-ip': {
        title: 'Private vs. √ñffentliche IP-Adressen',
        pr√ºfungsteil: 'AP1',
        content: `
            <div class="popup-section">
                <div class="popup-section-title">üìö Definition</div>
                <p>IPv4-Adressen werden in zwei Haupttypen unterteilt: private Adressen f√ºr lokale Netzwerke und √∂ffentliche Adressen f√ºr das Internet.</p>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">üìä Vergleich</div>
                <table class="comparison-table">
                    <thead><tr><th>Merkmal</th><th>Private IP-Adresse</th><th>√ñffentliche IP-Adresse</th></tr></thead>
                    <tbody>
                        <tr><td><strong>Zweck</strong></td><td>Kommunikation innerhalb eines lokalen Netzwerks (LAN), z.B. zu Hause oder in der Firma.</td><td>Kommunikation √ºber das Internet. Eindeutige Identifikation eines Netzwerks weltweit.</td></tr>
                        <tr><td><strong>Routing</strong></td><td><strong>Nicht</strong> im √∂ffentlichen Internet routbar.</td><td>Im Internet routbar.</td></tr>
                        <tr><td><strong>Adressbereiche (RFC 1918)</strong></td><td>10.0.0.0 ‚Äì 10.255.255.255 (/8)<br>172.16.0.0 ‚Äì 172.31.255.255 (/12)<br>192.168.0.0 ‚Äì 192.168.255.255 (/16)</td><td>Alle anderen Adressen, die nicht als privat, Loopback o.√§. reserviert sind.</td></tr>
                        <tr><td><strong>Vergabe</strong></td><td>Wird vom lokalen Router (meist per DHCP) vergeben. Kann in jedem LAN wiederverwendet werden.</td><td>Wird vom Internet Service Provider (ISP) zugewiesen und ist weltweit (tempor√§r) eindeutig.</td></tr>
                    </tbody>
                </table>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">üåê Network Address Translation (NAT)</div>
                <p>Damit ein Ger√§t mit privater IP-Adresse ins Internet kann, muss der Router <strong>NAT</strong> anwenden. Der Router "√ºbersetzt" die private Absender-IP in seine eigene, √∂ffentliche IP-Adresse. F√ºr die Gegenstelle im Internet sieht es so aus, als k√§me die Anfrage direkt vom Router.</p>
            </div>
        `,
        flashcard: { question: "Darf eine private IP-Adresse (z.B. 192.168.1.5) direkt im Internet geroutet werden?", answer: "Nein. Private IP-Adressen sind nur in lokalen Netzwerken g√ºltig. F√ºr die Internetkommunikation m√ºssen sie mittels NAT (Network Address Translation) in eine √∂ffentliche IP-Adresse √ºbersetzt werden." }
    },
    'subnetting': {
        title: 'Subnetting & VLSM',
        pr√ºfungsteil: 'AP1',
        content: `
            <div class="popup-section">
                <div class="popup-section-title">üìö Was ist Subnetting?</div>
                <p><strong>Subnetting</strong> (Subnetzbildung) ist der Prozess, bei dem ein gro√ües IP-Netzwerk in mehrere kleinere, logische Unternetze (Subnetze) aufgeteilt wird. Dies geschieht durch "Ausleihen" von Bits aus dem Host-Anteil der IP-Adresse, um sie dem Netzwerk-Anteil hinzuzuf√ºgen. Dadurch wird die Subnetzmaske verl√§ngert.</p>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">üéØ Warum Subnetting?</div>
                <ul>
                    <li><strong>Organisation:</strong> Netzwerke k√∂nnen nach Abteilungen oder Standorten strukturiert werden.</li>
                    <li><strong>Performance:</strong> Reduziert Broadcast-Verkehr, da Broadcasts auf das jeweilige Subnetz beschr√§nkt bleiben.</li>
                    <li><strong>Sicherheit:</strong> Der Datenverkehr kann zwischen den Subnetzen √ºber einen Router kontrolliert und gefiltert werden.</li>
                </ul>
            </div>
             <div class="popup-section">
                <div class="popup-section-title">üí° VLSM (Variable Length Subnet Masking)</div>
                <p>VLSM ist eine fortgeschrittene Methode des Subnettings, die es erlaubt, f√ºr verschiedene Subnetze <strong>unterschiedlich gro√üe Subnetzmasken</strong> zu verwenden. Das ist extrem effizient, da man jedem Subnetz genau die Anzahl an Adressen zuweisen kann, die es ben√∂tigt.</p>
            </div>
            <div class="example-box">
                <strong>üîß Beispielaufgabe (VLSM):</strong> Ein Netzwerk ben√∂tigt 100 Hosts.
                <ol>
                    <li><strong>Bedarf ermitteln:</strong> F√ºr 100 Hosts braucht man 100 Adressen + 1 Netzwerk- + 1 Broadcast-Adresse = 102 Adressen.</li>
                    <li><strong>N√§chste Zweierpotenz finden:</strong> Die n√§chste Potenz von 2, die gr√∂√üer oder gleich 102 ist, ist $2^7 = 128$. Man ben√∂tigt also 7 Bits f√ºr den Host-Anteil.</li>
                    <li><strong>Subnetzmaske berechnen:</strong> Eine IPv4-Adresse hat 32 Bits. Wenn 7 Bits f√ºr die Hosts reserviert sind, bleiben $32 - 7 = 25$ Bits f√ºr das Netzwerk.</li>
                    <li><strong>Ergebnis:</strong> Das Subnetz hat die Pr√§fixl√§nge <strong>/25</strong> (Subnetzmaske 255.255.255.128). Es stellt 128 Adressen bereit, wovon 126 f√ºr Hosts nutzbar sind.</li>
                </ol>
            </div>
        `,
        flashcard: { question: "Was ist der Hauptvorteil von VLSM gegen√ºber Subnetting mit fester L√§nge?", answer: "VLSM (Variable Length Subnet Masking) erlaubt die Verwendung unterschiedlich gro√üer Subnetze, wodurch IP-Adressen viel effizienter und bedarfsgerechter zugewiesen werden k√∂nnen." }
    },
    'broadcast-netzwerk': {
        title: 'Netzwerk-, Host- & Broadcast-Adresse',
        pr√ºfungsteil: 'AP1',
        content: `
            <div class="popup-section">
                <div class="popup-section-title">üìö Die drei Adresstypen in einem Subnetz</div>
                <p>Jedes IP-Subnetz enth√§lt drei Arten von Adressen, deren Rolle durch die Host-Bits in der Adresse definiert wird.</p>
                <ul>
                    <li><strong>Netzwerkadresse:</strong> Die <strong>allererste</strong> Adresse in einem Subnetz. Alle Host-Bits sind hier auf 0 gesetzt. Sie identifiziert das Subnetz als Ganzes und kann keinem einzelnen Ger√§t zugewiesen werden.</li>
                    <li><strong>Host-Adressen:</strong> Alle Adressen zwischen der Netzwerk- und der Broadcast-Adresse. Diese k√∂nnen Ger√§ten wie PCs, Servern oder Druckern zugewiesen werden.</li>
                    <li><strong>Broadcast-Adresse:</strong> Die <strong>allerletzte</strong> Adresse in einem Subnetz. Alle Host-Bits sind hier auf 1 gesetzt. Ein an diese Adresse gesendetes Paket erreicht alle Ger√§te im selben Subnetz. Sie kann ebenfalls keinem einzelnen Ger√§t zugewiesen werden.</li>
                </ul>
            </div>
            <div class="example-box">
                <strong>üîß Beispielaufgabe:</strong> Gegeben ist die IP-Adresse <strong>192.168.50.100</strong> mit der Subnetzmaske <strong>/24</strong> (255.255.255.0).
                <ul>
                    <li>Die Subnetzmaske /24 legt fest, dass die ersten 3 Oktette (192.168.50) den Netzwerkanteil bilden und das letzte Oktett den Hostanteil.</li>
                    <li><strong>Netzwerkadresse:</strong> Das letzte Oktett auf den niedrigsten Wert setzen (alle Host-Bits auf 0) -> <strong>192.168.50.0</strong></li>
                    <li><strong>Broadcast-Adresse:</strong> Das letzte Oktett auf den h√∂chsten Wert setzen (alle Host-Bits auf 1) -> <strong>192.168.50.255</strong></li>
                    <li><strong>Nutzbare Host-Adressen:</strong> 192.168.50.1 bis 192.168.50.254</li>
                    <li><strong>Anzahl Hosts:</strong> F√ºr den Host-Anteil bleiben 8 Bits ($32-24=8$). Daraus ergeben sich $2^8 = 256$ Gesamtadressen. Abz√ºglich der 2 reservierten Adressen sind das <strong>254 nutzbare Hosts</strong>.</li>
                </ul>
            </div>
            <section id="broadcast-calculation">
  <h2>Ausf√ºhrliche Anleitung: Berechnung der Broadcast-Adresse</h2>

  <p>
    Eine Broadcast-Adresse dient dazu, ein Paket an <em>alle</em> Hosts innerhalb eines bestimmten Subnetzes zu senden. 
    Um sie zu ermitteln, muss man gezielt alle Bits reservierter Host-Adressen auf ‚Äû1‚Äú setzen, w√§hrend die Netz-Bits unver√§ndert bleiben.
  </p>

  <h3>1. Grundbegriffe verstehen</h3>
  <p>
    <strong>IP-Adresse:</strong> Eine 32-Bit-Zahl, gegliedert in einen Netz-Teil und einen Host-Teil.  
    <strong>CIDR-Notation (/n):</strong> Gibt an, wie viele Bits zum Netz-Teil geh√∂ren (z. B. /24 ‚Üí die ersten 24 Bits sind Netz-Teil).  
    <strong>Subnetzmaske:</strong> Stellt diese Aufteilung in Dezimalform dar: ‚Äû1‚Äú f√ºr Netz-Bits, ‚Äû0‚Äú f√ºr Host-Bits (z. B. /24 ‚Üí 255.255.255.0).  
    <strong>Wildcard-Maske:</strong> Das bitweise Inverse der Subnetzmaske ‚Äì sie zeigt, welche Bits zum Host-Teil geh√∂ren (Wildcard-Oktett = 255 ‚àí Maske-Oktett).
  </p>

  <h3>2. Subnetzmaske ‚Üí Wildcard-Maske</h3>
  <p>
    Die Wildcard-Maske zeigt, <em>welche</em> Bits innerhalb der 32-Bit-Adresse f√ºr Hosts frei sind. 
    Ein praktisches Vorgehen:
  </p>
  <ul>
    <li>Subnetzmaske in vier Oktette zerlegen (z. B. /26 ‚Üí 255.255.255.192).</li>
    <li>Jedes Oktett mit <code>255 ‚àí Oktettwert</code> invertieren:</li>
  </ul>
  <pre><code>
Subnetzmaske: 255 . 255 . 255 . 192
             11111111 . 11111111 . 11111111 . 11000000
Wildcard     =   0   .   0   .   0   .    63
             00000000 . 00000000 . 00000000 . 00111111
  </code></pre>
  <p>‚Üí Wildcard-Maske = <strong>0.0.0.63</strong></p>

  <h3>3. Netz-ID sicherstellen</h3>
  <p>
    Die Netz-ID ist der erste (kleinste) Wert im Subnetz ‚Äì immer <code>IP-Adresse AND Subnetzmaske</code>. 
    Oft ist sie bereits vorgegeben (z. B. ‚Äû172.16.0.0/16‚Äú).  
    Bitweise gerechnet ergibt sie die Adresse mit allen Host-Bits auf ‚Äû0‚Äú.
  </p>

  <h3>4. Broadcast-Adresse berechnen</h3>
  <p>
    Die Broadcast-Adresse besteht aus der Netz-ID plus der Wildcard-Maske. 
    Damit werden s√§mtliche Host-Bits auf ‚Äû1‚Äú gesetzt, was genau dem Zweck einer Broadcast-Adresse entspricht:
  </p>
  <pre><code>
Broadcast = Netz-ID + Wildcard-Maske
  </code></pre>

  <h3>5. Schritt-f√ºr-Schritt-Beispiele</h3>

  <!-- Beispiel A: WAN /30 -->
  <h4>A) WAN-Netz: 203.0.113.64/30</h4>
  <p>
    Ein /30-Netz teilt 32 Bits in 30 Netz-Bits und 2 Host-Bits auf. Das ergibt genau 4 Adressen:
    Netz-ID, zwei Host-Adressen und die Broadcast-Adresse.
  </p>
  <ul>
    <li><strong>Subnetzmaske:</strong> 255.255.255.252 ‚Üí Wildcard 0.0.0.3</li>
    <li><strong>Netz-ID:</strong> 203.0.113.64 (Host-Bits = 00)</li>
    <li><strong>Broadcast:</strong>
      <code>203.0.113.64 + 0.0.0.3 = 203.0.113.67</code>
    </li>
  </ul>

  <!-- Beispiel B: LAN /16 -->
  <h4>B) LAN-Netz: 172.16.0.0/16</h4>
  <p>
    Bei /16 verbleiben 16 Bits f√ºr Host-Adressen (2¬π‚Å∂ = 65 536 Adressen).
    Die ersten (Netz-ID) und letzte Adresse (Broadcast) sind reserviert.
  </p>
  <ul>
    <li><strong>Subnetzmaske:</strong> 255.255.0.0 ‚Üí Wildcard 0.0.255.255</li>
    <li><strong>Netz-ID:</strong> 172.16.0.0 (Host-Bits = 00000000.00000000)</li>
    <li><strong>Broadcast:</strong>
      <code>172.16.0.0 + 0.0.255.255 = 172.16.255.255</code>
    </li>
  </ul>

  <!-- Beispiel C: DMZ /26 -->
  <h4>C) DMZ-Netz: 10.10.0.0/26</h4>
  <p>
    Ein /26-Netz nutzt 26 Bits f√ºr das Netz und l√§sst 6 Bits frei. 
    Somit stehen 2‚Å∂ = 64 Adressen zur Verf√ºgung.
  </p>
  <ul>
    <li><strong>Subnetzmaske:</strong> 255.255.255.192 ‚Üí Wildcard 0.0.0.63</li>
    <li><strong>Netz-ID:</strong> 10.10.0.0</li>
    <li><strong>Broadcast:</strong>
      <code>10.10.0.0 + 0.0.0.63 = 10.10.0.63</code>
    </li>
  </ul>

  <h3>6. Zusammenfassung und Praxistipps</h3>
  <p>
    <strong>Merke:</strong>  
    Broadcast-Adresse = Netz-ID (Host-Bits = 0) + Wildcard (Host-Bits = 1).  
    Die Anzahl der nutzbaren Hosts ist dabei immer <code>2^(Host-Bits) - 2</code>, 
    da Netz-ID und Broadcast nicht als Host-Adressen verwendet werden d√ºrfen.
  </p>
  <p>
    So kannst du in jeder Netzwerk-Planung sicher und schnell die korrekte Broadcast-Adresse ermitteln.
  </p>
</section>
        `,
        flashcard: { question: "Welche zwei Adressen in einem Subnetz k√∂nnen nicht an einen Host vergeben werden?", answer: "Die Netzwerkadresse (die erste Adresse, alle Host-Bits auf 0) und die Broadcast-Adresse (die letzte Adresse, alle Host-Bits auf 1)." }
    },
    'ipv6-adresstypen': {
        title: 'IPv6-Adresstypen & ihre Funktion',
        pr√ºfungsteil: 'AP1',
        content: `
            <div class="popup-section">
                <div class="popup-section-title">üìö Modulares Konzept von IPv6</div>
                <p>Anders als bei IPv4, wo Adresstypen oft durch Tricks wie NAT entstanden, hat IPv6 ein modulares Konzept, bei dem jeder Adresstyp eine klar definierte Aufgabe hat. Ein Ger√§t hat oft mehrere IPv6-Adressen gleichzeitig.</p>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">üìä Die wichtigsten IPv6 Unicast-Adresstypen</div>
                <table class="comparison-table">
                    <thead><tr><th>Adresstyp</th><th>Pr√§fix</th><th>Zweck</th><th>Vergleichbare IPv4-Entsprechung</th></tr></thead>
                    <tbody>
                        <tr><td><strong>Global Unicast (GUA)</strong></td><td><code>2000::/3</code> (z.B. <code>2001:db8:...</code>)</td><td>Weltweit eindeutige, im Internet routbare Adresse. F√ºr die Kommunikation mit dem Internet.</td><td>√ñffentliche IPv4-Adresse</td></tr>
                        <tr><td><strong>Unique Local (ULA)</strong></td><td><code>fc00::/7</code></td><td>F√ºr die interne Kommunikation in einem oder mehreren lokalen Netzwerken. Nicht im Internet routbar. Stabil, auch wenn sich der Internetanbieter √§ndert.</td><td>Private IPv4-Adresse (z.B. 192.168.x.x)</td></tr>
                        <tr><td><strong>Link-Local (LLA)</strong></td><td><code>fe80::/10</code></td><td>Wird automatisch erzeugt. Nur f√ºr die Kommunikation im selben physischen Netzwerksegment (z.B. zwischen PC und Router). Nicht routbar. Technisch notwendig f√ºr die Netzwerkkonfiguration.</td><td>APIPA (169.254.x.x), aber immer aktiv</td></tr>
                        <tr><td><strong>Loopback</strong></td><td><code>::1</code></td><td>Verweist auf das eigene Ger√§t (localhost). Zum Testen der Netzwerkkonfiguration.</td><td>127.0.0.1</td></tr>
                    </tbody>
                </table>
                 <p>Zus√§tzlich gibt es noch den <strong>Multicast-Adressraum</strong> (Pr√§fix <code>ff00::/8</code>), der genutzt wird, um Daten an eine Gruppe von Ger√§ten gleichzeitig zu senden und den veralteten Broadcast ersetzt.</p>
            </div>
        `,
        flashcard: { question: "Nenne drei Haupttypen von IPv6-Unicast-Adressen und ihren Zweck.", answer: "1. Global Unicast (GUA): √ñffentlich, f√ºr die Internet-Kommunikation. 2. Unique Local (ULA): Privat, f√ºr die interne Netzwerkkommunikation. 3. Link-Local (LLA): Nur f√ºr die direkte Kommunikation im selben LAN-Segment." }
    },
    'netzwerkgeraete-vergleich': {
        title: 'Netzwerkger√§te im Vergleich (Hub, Switch, Router)',
        pr√ºfungsteil: 'AP1',
        content: `
            <div class="popup-section">
                <div class="popup-section-title">üìö Die Grundbausteine eines Netzwerks</div>
                <p>Hubs, Switches und Router sind zentrale Komponenten f√ºr den Aufbau von Netzwerken. Sie unterscheiden sich fundamental in ihrer Funktionsweise und "Intelligenz".</p>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">üìä Vergleich der Ger√§te</div>
                <table class="comparison-table">
                    <thead><tr><th>Merkmal</th><th>Hub</th><th>Switch</th><th>Router</th></tr></thead>
                    <tbody>
                        <tr><td><strong>OSI-Schicht</strong></td><td>Schicht 1 (Physical Layer)</td><td>Schicht 2 (Data Link Layer)</td><td>Schicht 3 (Network Layer)</td></tr>
                        <tr><td><strong>Funktionsweise</strong></td><td>Elektrischer Verst√§rker</td><td>Intelligenter Verteiler</td><td>Netzwerk-Koppler / Wegfinder</td></tr>
                        <tr><td><strong>Adressierung</strong></td><td>Keine, kennt keine Adressen</td><td>MAC-Adressen</td><td>IP-Adressen</td></tr>
                        <tr><td><strong>Weiterleitung</strong></td><td>Sendet ankommende Daten an <strong>alle</strong> anderen Ports (Broadcast)</td><td>Sendet Daten gezielt nur an den Port des Empf√§ngers (via MAC-Tabelle)</td><td>Leitet Daten gezielt zwischen <strong>verschiedenen</strong> Netzwerken weiter</td></tr>
                        <tr><td><strong>Kollisionsdom√§ne</strong></td><td>Alle Ports teilen sich eine einzige Kollisionsdom√§ne (ineffizient)</td><td>Jeder Port ist eine eigene Kollisionsdom√§ne (effizient)</td><td>Jeder Port ist eine eigene Broadcast-Dom√§ne</td></tr>
                        <tr><td><strong>Verwendung</strong></td><td>Veraltet, kaum noch im Einsatz</td><td>Standard in lokalen Netzwerken (LAN) zur Verbindung von Endger√§ten</td><td>Verbindung von LANs untereinander oder mit dem Internet (WAN)</td></tr>
                    </tbody>
                </table>
            </div>
             <div class="example-box">
                <strong>üí° Analogie:</strong><br>
                - Ein <strong>Hub</strong> ist wie ein Megafon: Eine Person schreit hinein, und jeder im Raum h√∂rt es, egal f√ºr wen es bestimmt war.<br>
                - Ein <strong>Switch</strong> ist wie eine Telefonanlage: Er verbindet gezielt den Anrufer mit dem gew√ºnschten Gespr√§chspartner.<br>
                - Ein <strong>Router</strong> ist wie ein Post-Verteilzentrum: Er schaut auf die Postleitzahl (IP-Netz) und leitet das Paket in die richtige Stadt (Netzwerk) weiter.
            </div>
        `,
        flashcard: { question: "Was ist der Hauptunterschied zwischen einem Switch und einem Hub?", answer: "Ein Hub (Layer 1) sendet Daten an alle Ports (Broadcast). Ein Switch (Layer 2) leitet Daten intelligent und gezielt nur an den Port des Empf√§ngers weiter, basierend auf dessen MAC-Adresse." }
    },
    'bridge-stp': {
        title: 'Bridge & Spanning Tree Protocol (STP)',
        pr√ºfungsteil: 'AP1',
        content: `
            <div class="popup-section">
                <div class="popup-section-title">üåâ Was ist eine Bridge?</div>
                <p>Eine <strong>Bridge</strong> ist ein Netzwerkger√§t, das zwei oder mehr Segmente eines lokalen Netzwerks (LAN) auf <strong>Schicht 2 (Data Link Layer)</strong> miteinander verbindet. Sie arbeitet wie ein einfacher Switch, indem sie MAC-Adressen lernt und den Datenverkehr filtert, um unn√∂tige Daten√ºbertragungen zwischen den Segmenten zu vermeiden. Heute sind Bridges weitgehend durch Switches ersetzt worden, die im Grunde "Multi-Port-Bridges" sind.</p>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">üîÑ Das Problem: Switching-Loops</div>
                <p>Wenn Switches (oder Bridges) redundant miteinander verbunden werden, um die Ausfallsicherheit zu erh√∂hen, kann ein gef√§hrliches Problem entstehen: der <strong>Switching-Loop</strong> (oder Broadcast-Sturm).</p>
                <p>Dabei wird ein Broadcast-Frame endlos im Kreis von Switch zu Switch weitergeleitet. Jeder Switch leitet den Frame an alle anderen Ports weiter, was zu einer exponentiellen Vervielfachung des Datenverkehrs f√ºhrt und das gesamte Netzwerk innerhalb von Sekunden lahmlegen kann.</p>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">üå≥ Die L√∂sung: Spanning Tree Protocol (STP)</div>
                <p>Das <strong>Spanning Tree Protocol (STP, IEEE 802.1D)</strong> ist ein Mechanismus, der solche Loops automatisch verhindert. Seine Aufgabe ist es, eine schleifenfreie, baumartige Logik-Topologie in einem physikalisch vermaschten Netzwerk zu erstellen.</p>
                <ul>
                    <li><strong>Wahl eines Root-Switch:</strong> STP w√§hlt einen zentralen "Root-Switch".</li>
                    <li><strong>Ermittlung der besten Pfade:</strong> Von jedem anderen Switch aus wird der schnellste Pfad zur Root-Bridge berechnet.</li>
                    <li><strong>Blockierung redundanter Pfade:</strong> Alle anderen, redundanten Pfade werden von STP in einen <strong>Blocking-Zustand</strong> versetzt. Sie leiten keinen Datenverkehr weiter, bleiben aber als "Backup" verf√ºgbar.</li>
                </ul>
                 <div class="example-box">
                    <strong>‚ùó Wichtig:</strong> F√§llt der aktive Pfad aus, re-aktiviert STP automatisch einen der blockierten Pfade, um die Netzwerkverbindung aufrechtzuerhalten.
                </div>
            </div>
        `,
        flashcard: { question: "Welchen Zweck erf√ºllt das Spanning Tree Protocol (STP) in einem geswitchten Netzwerk?", answer: "STP verhindert Switching-Loops (Broadcast-St√ºrme), indem es redundante Pfade in der Netzwerktopologie erkennt und logisch blockiert, um eine schleifenfreie Topologie sicherzustellen." }
    },
    'osi-modell-gesamt': {
        title: 'Das OSI-Modell (7 Schichten)',
        pr√ºfungsteil: 'AP1',
        content: `
            <div class="popup-section">
                <div class="popup-section-title">üìö Warum gibt es das OSI-Modell?</div>
                <p>Das OSI-Modell (Open Systems Interconnection) wurde von der ISO als Referenzmodell entwickelt, um Netzwerkkommunikation zu standardisieren. Es teilt den komplexen Prozess der Daten√ºbertragung in <strong>sieben logische Schichten (Layer)</strong> auf. Jede Schicht hat eine spezifische Aufgabe und arbeitet mit den Schichten direkt dar√ºber und darunter zusammen. Dies erleichtert die Fehlersuche und die Interoperabilit√§t zwischen Ger√§ten verschiedener Hersteller.</p>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">üè¢ Die 7 Schichten im √úberblick</div>
                <table class="comparison-table">
                    <thead><tr><th>#</th><th>Schicht</th><th>Hauptaufgabe</th><th>Protokolle / Ger√§te / Beispiele</th></tr></thead>
                    <tbody>
                        <tr><td>7</td><td><strong>Anwendung (Application)</strong></td><td>Schnittstelle f√ºr Netzwerkanwendungen</td><td>HTTP, FTP, SMTP, DNS, Browser</td></tr>
                        <tr><td>6</td><td><strong>Darstellung (Presentation)</strong></td><td>Daten umwandeln, verschl√ºsseln, komprimieren</td><td>JPEG, ASCII, TLS/SSL</td></tr>
                        <tr><td>5</td><td><strong>Sitzung (Session)</strong></td><td>Kommunikationssitzungen steuern</td><td>NetBIOS, RPC, Sockets</td></tr>
                        <tr><td>4</td><td><strong>Transport (Transport)</strong></td><td>Zuverl√§ssige End-zu-End-Verbindung, Segmentierung</td><td>TCP, UDP, Ports</td></tr>
                        <tr><td>3</td><td><strong>Netzwerk (Network)</strong></td><td>Logische Adressierung & Routing zwischen Netzwerken</td><td>IP (IPv4/IPv6), ICMP, Router</td></tr>
                        <tr><td>2</td><td><strong>Sicherung (Data Link)</strong></td><td>Fehlerfreie √úbertragung im lokalen Netz, physische Adressierung</td><td>Ethernet, WLAN, MAC-Adressen, Switches</td></tr>
                        <tr><td>1</td><td><strong>Bit√ºbertragung (Physical)</strong></td><td>Physische √úbertragung von Bits</td><td>Kabel, Glasfaser, Funk, Hubs, Repeater</td></tr>
                    </tbody>
                </table>
                <p><strong>Merkhilfe (von unten nach oben):</strong> <strong>P</strong>lease <strong>D</strong>o <strong>N</strong>ot <strong>T</strong>hrow <strong>S</strong>ausage <strong>P</strong>izza <strong>A</strong>way.</p>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">üîÑ Datenfluss (Verkapselung)</div>
                <p>Wenn Daten gesendet werden, durchlaufen sie das Modell von oben nach unten (Schicht 7 -> 1). Auf jeder Schicht wird ein Header mit schichtspezifischen Informationen hinzugef√ºgt. Dieser Prozess nennt sich <strong>Verkapselung (Encapsulation)</strong>.</p>
                <p>Beim Empf√§nger l√§uft der Prozess umgekehrt ab (Schicht 1 -> 7). Jede Schicht entfernt ihren Header und verarbeitet die Informationen, bis die reinen Nutzdaten bei der Anwendung ankommen. Dies nennt man <strong>Entkapselung (Decapsulation)</strong>.</p>
            </div>
        `,
        flashcard: { question: "Auf welcher OSI-Schicht arbeiten Router und welche Adressen verwenden sie?", answer: "Router arbeiten auf Schicht 3 (Netzwerkschicht) und verwenden IP-Adressen, um Datenpakete zwischen verschiedenen Netzwerken weiterzuleiten (Routing)." }
    },

    // =======================================================
    // THEMA: SCHUTZBEDARFSANALYSE
    // =======================================================
    'schutzziele-cia': {
        title: 'Schutzziele der Informationssicherheit (CIA-Triade)',
        pr√ºfungsteil: 'AP1',
        content: `
            <div class="popup-section">
                <div class="popup-section-title">üõ°Ô∏è Die 3 Grundpfeiler</div>
                <p>Die klassischen Schutzziele der Informationssicherheit werden durch die CIA-Triade beschrieben. Sie sind die Grundlage jeder Schutzbedarfsanalyse.</p>
                <ul>
                    <li><strong>Vertraulichkeit (Confidentiality):</strong> Daten d√ºrfen nur von autorisierten Personen eingesehen werden. Unbefugter Zugriff wird verhindert.</li>
                    <li><strong>Integrit√§t (Integrity):</strong> Daten m√ºssen korrekt und vollst√§ndig sein. Unbemerkte, unautorisierte Ver√§nderungen m√ºssen verhindert werden.</li>
                    <li><strong>Verf√ºgbarkeit (Availability):</strong> Daten und IT-Systeme m√ºssen f√ºr autorisierte Benutzer jederzeit zug√§nglich und funktionsf√§hig sein.</li>
                </ul>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">‚ûï Erweiterte Schutzziele</div>
                <p>Neben der CIA-Triade gibt es weitere wichtige Schutzziele:</p>
                <ul>
                    <li><strong>Authentizit√§t:</strong> Die Echtheit und Glaubw√ºrdigkeit eines Subjekts oder Objekts muss sichergestellt sein (z.B. ist der Absender einer E-Mail wirklich der, f√ºr den er sich ausgibt?).</li>
                    <li><strong>Zurechenbarkeit / Nichtabstreitbarkeit (Non-Repudiation):</strong> Eine durchgef√ºhrte Handlung kann einem Akteur eindeutig zugeordnet werden und nicht abgestritten werden (z.B. eine digitale Signatur unter einem Vertrag).</li>
                </ul>
            </div>
             <div class="example-box">
                <strong>Beispiel:</strong> Eine Online-Banking-Transaktion.<br>
                - <strong>Vertraulichkeit:</strong> Nur du und die Bank k√∂nnen die Kontodaten sehen (Verschl√ºsselung).<br>
                - <strong>Integrit√§t:</strong> Der √úberweisungsbetrag kann auf dem Weg nicht unbemerkt ver√§ndert werden.<br>
                - <strong>Verf√ºgbarkeit:</strong> Das Online-Banking-Portal ist erreichbar, wenn du es nutzen m√∂chtest.<br>
                - <strong>Authentizit√§t:</strong> Du weist dich mit Passwort und TAN als echter Kontoinhaber aus.
            </div>
        `,
        flashcard: { question: "Nenne die drei klassischen Schutzziele der Informationssicherheit (CIA-Triade).", answer: "Vertraulichkeit (Confidentiality), Integrit√§t (Integrity) und Verf√ºgbarkeit (Availability)." }
    },
    'backup-konzepte': {
        title: 'Backup-Arten (Voll, Differentiell, Inkrementell)',
        pr√ºfungsteil: 'AP1',
        content: `
            <div class="popup-section">
                <div class="popup-section-title">üìö Das Grundprinzip</div>
                <p>Backups sind strategische Kopien von Daten, um diese nach einem Datenverlust wiederherstellen zu k√∂nnen. Die Wahl der Backup-Art beeinflusst Speicherbedarf, Geschwindigkeit und Komplexit√§t der Wiederherstellung.</p>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">üìä Die drei Hauptarten</div>
                <table class="comparison-table">
                    <thead><tr><th>Backup-Art</th><th>Was wird gesichert?</th><th>Vorteil</th><th>Nachteil</th><th>Wiederherstellung</th></tr></thead>
                    <tbody>
                        <tr>
                            <td><strong>Voll-Backup (Full)</strong></td>
                            <td>Alle ausgew√§hlten Daten, jedes Mal.</td>
                            <td>Einfache, schnelle Wiederherstellung.</td>
                            <td>Hoher Speicherbedarf, lange Sicherungsdauer.</td>
                            <td>Ben√∂tigt nur das letzte Voll-Backup.</td>
                        </tr>
                        <tr>
                            <td><strong>Differentielles Backup</strong></td>
                            <td>Alle Daten, die sich <strong>seit dem letzten Voll-Backup</strong> ge√§ndert haben.</td>
                            <td>Schneller als Voll-Backup, mittlere Komplexit√§t bei Wiederherstellung.</td>
                            <td>Ben√∂tigt mehr Speicher als inkrementell, da √Ñnderungen kumulieren.</td>
                            <td>Ben√∂tigt das letzte Voll-Backup + das letzte differentielle Backup.</td>
                        </tr>
                        <tr>
                            <td><strong>Inkrementelles Backup</strong></td>
                            <td>Alle Daten, die sich <strong>seit dem letzten Backup (egal welches)</strong> ge√§ndert haben.</td>
                            <td>Sehr schnell, geringster Speicherbedarf.</td>
                            <td>Komplexe, langsame Wiederherstellung.</td>
                            <td>Ben√∂tigt das letzte Voll-Backup + <strong>alle</strong> inkrementellen Backups seitdem.</td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div class="example-box">
                <strong>Typische Strategie (Gro√üvater-Vater-Sohn):</strong><br>
                - <strong>Sonntag:</strong> Voll-Backup<br>
                - <strong>Mo-Sa:</strong> T√§gliche differentielle oder inkrementelle Backups.
            </div>
        `,
        flashcard: { question: "Was ist der Unterschied zwischen einem differentiellen und einem inkrementellen Backup?", answer: "Differentiell sichert alle √Ñnderungen seit dem letzten Voll-Backup. Inkrementell sichert alle √Ñnderungen seit dem letzten Backup (egal ob voll oder inkrementell)." }
    },
    '321-regel': {
        title: 'Die 3-2-1-Backup-Regel',
        pr√ºfungsteil: 'AP1',
        content: `
            <div class="popup-section">
                <div class="popup-section-title">üõ°Ô∏è Ein robustes Backup-Konzept</div>
                <p>Die 3-2-1-Regel ist eine einfach zu merkende, aber sehr effektive Best-Practice-Strategie f√ºr die Datensicherung, die die Wahrscheinlichkeit eines vollst√§ndigen Datenverlusts drastisch reduziert.</p>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">üî¢ Die Regel im Detail</div>
                <ul>
                    <li><strong>3Ô∏è‚É£ Kopien Ihrer Daten:</strong><br>
                    Halten Sie immer mindestens <strong>drei Kopien</strong> Ihrer wichtigen Daten vor. Dies schlie√üt die Originaldaten und zwei Backups mit ein.</li>
                    
                    <li><strong>2Ô∏è‚É£ Verschiedene Speichermedien:</strong><br>
                    Speichern Sie diese Kopien auf mindestens <strong>zwei unterschiedlichen Medientypen</strong>. Dies sch√ºtzt vor dem Ausfall eines bestimmten Medientyps (z.B. alle Festplatten einer fehlerhaften Charge).
                    <div class="example-box" style="margin-top: 5px;">
                        Beispiele: Interne Festplatte + externe USB-Festplatte, NAS + Tape (Bandlaufwerk), Festplatte + Cloud-Speicher.
                    </div>
                    </li>

                    <li><strong>1Ô∏è‚É£ Kopie au√üer Haus (Off-Site):</strong><br>
                    Bewahren Sie mindestens <strong>eine Kopie an einem anderen geografischen Ort</strong> auf. Dies sch√ºtzt vor lokalen Katastrophen wie Feuer, Wasserschaden oder Diebstahl.
                    <div class="example-box" style="margin-top: 5px;">
                        Beispiele: Backup in einem Cloud-Speicher, eine externe Festplatte im Bankschlie√üfach oder an einem anderen Firmenstandort.
                    </div>
                    </li>
                </ul>
            </div>
        `,
        flashcard: { question: "Erkl√§re die 3-2-1-Backup-Regel.", answer: "Mindestens 3 Kopien der Daten, auf 2 verschiedenen Medientypen, davon 1 Kopie au√üer Haus (Off-Site)." }
    },
    'rto-rpo': {
        title: 'RTO und RPO',
        pr√ºfungsteil: 'AP1',
        content: `
            <div class="popup-section">
                <div class="popup-section-title">‚è±Ô∏è Kennzahlen f√ºr den Notfall</div>
                <p>RTO und RPO sind zwei entscheidende Kennzahlen in der Notfallplanung und im Business Continuity Management. Sie definieren die zeitlichen Anforderungen an die Wiederherstellung von IT-Systemen.</p>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">üìä Die Kennzahlen im Detail</div>
                <table class="comparison-table">
                     <thead><tr><th>Kennzahl</th><th>Vollst√§ndiger Name</th><th>Frage</th><th>Fokus</th><th>Beispiel</th></tr></thead>
                     <tbody>
                         <tr>
                             <td><strong>RTO</strong></td>
                             <td><strong>Recovery Time Objective</strong><br>(Wiederherstellungszeitziel)</td>
                             <td>"Wie schnell m√ºssen wir nach einem Ausfall wieder online sein?"</td>
                             <td>Zeit / Ausfalldauer</td>
                             <td>Ein RTO von 2 Stunden bedeutet, dass das System sp√§testens 2 Stunden nach dem Ausfall wieder laufen muss.</td>
                         </tr>
                         <tr>
                             <td><strong>RPO</strong></td>
                             <td><strong>Recovery Point Objective</strong><br>(Wiederherstellungspunktziel)</td>
                             <td>"Wie viel Datenverlust k√∂nnen wir maximal tolerieren?"</td>
                             <td>Daten / Datenverlust</td>
                             <td>Ein RPO von 1 Stunde bedeutet, dass der Datenbestand maximal eine Stunde alt sein darf. Dies erfordert mindestens st√ºndliche Backups.</td>
                         </tr>
                     </tbody>
                </table>
            </div>
             <div class="example-box">
                <strong>üí° Wichtig:</strong> Je niedriger RTO und RPO, desto teurer und aufw√§ndiger sind die technischen L√∂sungen (z.B. Hochverf√ºgbarkeitscluster, synchrone Replikation).
            </div>
        `,
        flashcard: { question: "Was ist der Unterschied zwischen RTO und RPO?", answer: "RTO (Recovery Time Objective) ist die maximal tolerierbare Ausfallzeit. RPO (Recovery Point Objective) ist der maximal tolerierbare Datenverlust." }
    },
    'snapshot-technologie': {
        title: 'Snapshot-Technologie',
        pr√ºfungsteil: 'AP1',
        content: `
            <div class="popup-section">
                <div class="popup-section-title">üì∏ Was ist ein Snapshot?</div>
                <p>Ein <strong>Snapshot</strong> (Momentaufnahme) ist ein eingefrorener Zustand eines Systems (z.B. einer virtuellen Maschine oder eines Dateisystems) zu einem bestimmten Zeitpunkt. Er speichert nicht die kompletten Daten, sondern nur die Unterschiede zum vorherigen Zustand (Delta) oder verweist auf die Originaldatenbl√∂cke.</p>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">‚öñÔ∏è Snapshot vs. Backup</div>
                <p>Ein Snapshot ist <strong>KEIN Backup!</strong> Sie dienen unterschiedlichen Zwecken.</p>
                <table class="comparison-table">
                    <thead><tr><th>Merkmal</th><th>Snapshot</th><th>Backup</th></tr></thead>
                    <tbody>
                        <tr>
                            <td><strong>Zweck</strong></td>
                            <td>Kurzfristige, schnelle Wiederherstellung bei fehlgeschlagenen √Ñnderungen (z.B. Software-Update).</td>
                            <td>Langfristige Datensicherung zur Wiederherstellung nach einem Totalverlust (z.B. Hardware-Defekt, Katastrophe).</td>
                        </tr>
                        <tr>
                            <td><strong>Abh√§ngigkeit</strong></td>
                            <td>Ist vom Original-Datentr√§ger abh√§ngig. Geht der Original-Datentr√§ger verloren, ist der Snapshot nutzlos.</td>
                            <td>Ist eine unabh√§ngige, vollst√§ndige Kopie der Daten und kann ohne das Original wiederhergestellt werden.</td>
                        </tr>
                        <tr>
                            <td><strong>Dauer</strong></td>
                            <td>Sehr schnell zu erstellen (Sekunden).</td>
                            <td>Langsamer, da gro√üe Datenmengen kopiert werden m√ºssen.</td>
                        </tr>
                         <tr>
                            <td><strong>Speicherort</strong></td>
                            <td>Meist am selben Ort wie die Originaldaten.</td>
                            <td>Sollte auf einem separaten Medium und idealerweise an einem anderen Ort gespeichert werden (3-2-1-Regel).</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        `,
        flashcard: { question: "Warum ist ein Snapshot kein Ersatz f√ºr ein Backup?", answer: "Weil ein Snapshot vom Original-Datentr√§ger abh√§ngig ist. Geht das Original verloren, ist der Snapshot nutzlos. Ein Backup ist eine unabh√§ngige Kopie." }
    },

    // =======================================================
    // THEMA: SOFTWARE & DATEN
    // =======================================================
    'er-diagramme': {
        title: 'ER-Diagramme (Entity-Relationship-Modell)',
        pr√ºfungsteil: 'AP1',
        content: `
            <div class="popup-section">
                <div class="popup-section-title">üìö Definition</div>
                <p>Ein <strong>Entity-Relationship-Modell (ERM)</strong> ist eine grafische Darstellung zur Konzeption von Datenbanken. Es zeigt, welche Arten von Objekten (Entit√§ten) es gibt und wie diese miteinander in Beziehung stehen.</p>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">üß± Bausteine eines ER-Diagramms</div>
                <ul>
                    <li><strong>Entit√§t (Entity):</strong> Ein eindeutig identifizierbares Objekt der realen Welt, √ºber das Informationen gespeichert werden sollen. Wird als Rechteck dargestellt.<br><em>Beispiel: Kunde, Produkt, Bestellung.</em></li>
                    <li><strong>Attribut (Attribute):</strong> Eine Eigenschaft, die eine Entit√§t beschreibt. Wird als Ellipse dargestellt.<br><em>Beispiel: Ein Kunde hat die Attribute Kunden-Nr, Name, Adresse.</em></li>
                    <li><strong>Beziehung (Relationship):</strong> Eine Verkn√ºpfung zwischen zwei oder mehr Entit√§ten. Wird als Raute dargestellt.<br><em>Beispiel: Ein Kunde 't√§tigt' eine Bestellung.</em></li>
                    <li><strong>Kardinalit√§t:</strong> Gibt an, wie viele Entit√§ten einer Art mit wie vielen Entit√§ten einer anderen Art in Beziehung stehen k√∂nnen.<br><em>Beispiel: 1:n (Ein Kunde kann n Bestellungen haben), n:m (n Sch√ºler besuchen m Kurse).</em></li>
                </ul>
            </div>
            <div class="example-box">
                <strong>Grafisches Beispiel (vereinfacht):</strong><br>
                [Kunde] --(1)----‚óä t√§tigt ‚óä----(n)-- [Bestellung]
            </div>
        `,
        flashcard: { question: "Was sind die drei Hauptkomponenten eines ER-Diagramms?", answer: "Entit√§ten (Objekte, als Rechteck), Attribute (Eigenschaften, als Ellipse) und Beziehungen (Verkn√ºpfungen, als Raute)." }
    },
    'datenbankdesign': {
        title: 'Datenbankdesign & Normalisierung',
        pr√ºfungsteil: 'AP1',
        content: `
            <div class="popup-section">
                <div class="popup-section-title">üéØ Ziel der Normalisierung</div>
                <p>Die Normalisierung ist ein schrittweiser Prozess im relationalen Datenbankdesign, um Datenredundanz zu reduzieren und Datenintegrit√§t zu verbessern. Ziel ist es, Anomalien bei der Daten√§nderung (Einf√ºgen, √Ñndern, L√∂schen) zu verhindern.</p>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">üî¢ Die ersten drei Normalformen (1NF, 2NF, 3NF)</div>
                <ol>
                    <li><strong>Erste Normalform (1NF):</strong> Eine Tabelle ist in der 1NF, wenn alle Attributwerte <strong>atomar</strong> sind. Das bedeutet, es gibt keine mehrwertigen Attribute (z.B. mehrere Telefonnummern in einer einzigen Zelle). Jede Spalte muss einen eindeutigen Namen haben und jede Zeile muss durch einen Prim√§rschl√ºssel eindeutig identifizierbar sein.</li>
                    <li><strong>Zweite Normalform (2NF):</strong> Eine Tabelle ist in der 2NF, wenn sie sich in der 1NF befindet und jedes Nicht-Schl√ºssel-Attribut <strong>voll funktional vom gesamten Prim√§rschl√ºssel</strong> abh√§ngig ist. Dies ist nur relevant f√ºr Tabellen mit zusammengesetzten Prim√§rschl√ºsseln. Attribute, die nur von einem Teil des Schl√ºssels abh√§ngen, m√ºssen in eine separate Tabelle ausgelagert werden.</li>
                    <li><strong>Dritte Normalform (3NF):</strong> Eine Tabelle ist in der 3NF, wenn sie sich in der 2NF befindet und es <strong>keine transitiven Abh√§ngigkeiten</strong> gibt. Das bedeutet, kein Nicht-Schl√ºssel-Attribut darf von einem anderen Nicht-Schl√ºssel-Attribut abh√§ngig sein. Solche Abh√§ngigkeiten m√ºssen in eine neue Tabelle ausgelagert werden.</li>
                </ol>
            </div>
             <div class="example-box">
                <strong>Einfach gesagt:</strong><br>
                - <strong>1NF:</strong> "Jedes Feld nur ein Wert."<br>
                - <strong>2NF:</strong> "Alle Felder h√§ngen vom ganzen Schl√ºssel ab."<br>
                - <strong>3NF:</strong> "Alle Felder h√§ngen nur vom Schl√ºssel ab."
            </div>
        `,
        flashcard: { question: "Was ist das Hauptziel der Normalisierung von Datenbanken?", answer: "Die Reduzierung von Datenredundanz und die Vermeidung von Datenanomalien (Update-, Insert-, Delete-Anomalien), um die Datenintegrit√§t zu gew√§hrleisten." }
    },
    'sql-grundlagen': {
        title: 'SQL-Grundlagen (DML, DDL, DCL, TCL)',
        pr√ºfungsteil: 'AP1',
        content: `
            <div class="popup-section">
                <div class="popup-section-title">üìö Structured Query Language (SQL)</div>
                <p>SQL ist die Standardsprache zur Kommunikation mit relationalen Datenbanken. Die Befehle lassen sich in vier Hauptkategorien unterteilen.</p>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">üóÇÔ∏è DML (Data Manipulation Language)</div>
                <p>Zum Bearbeiten der in den Tabellen gespeicherten Daten.</p>
                <ul>
                    <li><strong>SELECT:</strong> Daten aus Tabellen abfragen. (<code>SELECT * FROM kunden;</code>)</li>
                    <li><strong>INSERT:</strong> Neue Datens√§tze in eine Tabelle einf√ºgen. (<code>INSERT INTO kunden (...) VALUES (...);</code>)</li>
                    <li><strong>UPDATE:</strong> Bestehende Datens√§tze √§ndern. (<code>UPDATE kunden SET ... WHERE ...;</code>)</li>
                    <li><strong>DELETE:</strong> Datens√§tze aus einer Tabelle l√∂schen. (<code>DELETE FROM kunden WHERE ...;</code>)</li>
                </ul>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">üèóÔ∏è DDL (Data Definition Language)</div>
                <p>Zum Definieren und Verwalten der Datenbankstruktur selbst.</p>
                <ul>
                    <li><strong>CREATE:</strong> Neue Datenbankobjekte erstellen. (<code>CREATE TABLE ...;</code>)</li>
                    <li><strong>ALTER:</strong> Bestehende Objekte √§ndern. (<code>ALTER TABLE ... ADD COLUMN ...;</code>)</li>
                    <li><strong>DROP:</strong> Objekte l√∂schen. (<code>DROP TABLE ...;</code>)</li>
                </ul>
            </div>
             <div class="popup-section">
                <div class="popup-section-title">üîí DCL (Data Control Language)</div>
                <p>Zur Steuerung der Zugriffsrechte auf die Datenbank.</p>
                <ul>
                    <li><strong>GRANT:</strong> Rechte vergeben. (<code>GRANT SELECT ON kunden TO user;</code>)</li>
                    <li><strong>REVOKE:</strong> Rechte entziehen. (<code>REVOKE SELECT ON kunden FROM user;</code>)</li>
                </ul>
            </div>
             <div class="popup-section">
                <div class="popup-section-title">üîÑ TCL (Transaction Control Language)</div>
                <p>Zur Verwaltung von Transaktionen.</p>
                <ul>
                    <li><strong>COMMIT:</strong> Eine Transaktion dauerhaft speichern.</li>
                    <li><strong>ROLLBACK:</strong> Eine Transaktion r√ºckg√§ngig machen.</li>
                </ul>
            </div>
        `,
            flashcard: { question: "Zu welcher SQL-Kategorie geh√∂rt der `CREATE TABLE`-Befehl?", answer: "Zu DDL (Data Definition Language), da er die Datenstruktur definiert." }
        },
        'programmierlogik': {
        title: 'Grundlagen: HTML, CSS & JavaScript',
        pr√ºfungsteil: 'AP1',
        content: `
            <div class="popup-section">
                <div class="popup-section-title">üèóÔ∏è Das Grundger√ºst einer Webseite</div>
                <p>Die Entwicklung moderner Webseiten basiert auf dem Zusammenspiel von drei Kerntechnologien, die man sich wie den Bau eines Hauses vorstellen kann:</p>
                <ul>
                    <li><strong>HTML (HyperText Markup Language):</strong> Das <strong>Skelett</strong>. Es gibt der Webseite ihre Struktur und ihren Inhalt (Texte, Bilder, Links).</li>
                    <li><strong>CSS (Cascading Style Sheets):</strong> Das <strong>Design</strong>. Es gestaltet das Aussehen der Webseite (Farben, Schriftarten, Layout).</li>
                    <li><strong>JavaScript:</strong> Die <strong>Interaktivit√§t</strong>. Es macht die Webseite dynamisch und reagiert auf Benutzereingaben.</li>
                </ul>
            </div>

            <div class="popup-section">
                <div class="popup-section-title">üìù HTML: Die Struktur</div>
                <p>HTML verwendet "Tags", um Elemente zu definieren.</p>
                <ul>
                    <li><code>&lt;h1&gt;</code> bis <code>&lt;h6&gt;</code>: √úberschriften</li>
                    <li><code>&lt;p&gt;</code>: Ein Textabsatz</li>
                    <li><code>&lt;a href="..."&gt;</code>: Ein Link</li>
                    <li><code>&lt;img src="..."&gt;</code>: Ein Bild</li>
                    <li><code>&lt;div&gt;</code>: Ein generischer Container zur Gruppierung</li>
                </ul>
            </div>

            <div class="popup-section">
                <div class="popup-section-title">üé® CSS: Das Styling</div>
                <p>CSS w√§hlt HTML-Elemente √ºber "Selektoren" aus und weist ihnen Stile zu.</p>
                <pre><code>/* W√§hlt alle Abs√§tze aus und f√§rbt sie blau */
p {
    color: blue;
    font-size: 16px;
}</code></pre>
            </div>
            
            <div class="popup-section">
                <div class="popup-section-title">‚öôÔ∏è JavaScript: Die Logik</div>
                <p>JavaScript manipuliert das <strong>DOM (Document Object Model)</strong>, die baumartige Repr√§sentation der HTML-Struktur im Browser.</p>
                <ul>
                    <li><strong>Variablen:</strong> Speicher f√ºr Werte (<code>let name = "Kai";</code>).</li>
                    <li><strong>Funktionen:</strong> Wiederverwendbare Codebl√∂cke.</li>
                    <li><strong>Events:</strong> Reaktionen auf Benutzeraktionen (z.B. Klicks). 
                        <pre><code>button.addEventListener('click', function() {
    alert('Button geklickt!');
});</code></pre>
                    </li>
                    <li><strong>Datenstrukturen:</strong>
                        <ul>
                            <li><strong>Array:</strong> Eine Liste von Werten, wie ein Regal mit F√§chern. <code>let fruits = ["Apfel", "Banane"];</code></li>
                            <li><strong>String:</strong> Eine Kette von Zeichen (Text). <code>let greeting = "Hallo Welt";</code></li>
                        </ul>
                    </li>
                </ul>
            </div>
        `,
        flashcard: { question: "Was sind die drei Kerntechnologien des Frontend und welche Rolle spielt jede?", answer: "1. HTML: Strukturiert den Inhalt (Skelett). 2. CSS: Gestaltet das Aussehen (Design). 3. JavaScript: Steuert die Interaktivit√§t (Logik)." }
    },

    // =======================================================
    // THEMA: SERVICE & KUNDENBERATUNG
    // =======================================================
    'kundenberatung': {
        title: 'Kundenberatung & Kommunikation',
        pr√ºfungsteil: 'AP1',
        content: `
            <div class="popup-section">
                <div class="popup-section-title">üó£Ô∏è Grundlagen der Kommunikation</div>
                <p>Professionelle Kundenberatung im IT-Bereich erfordert mehr als nur technisches Wissen. Es geht darum, Probleme zu verstehen, L√∂sungen verst√§ndlich zu erkl√§ren und eine positive Kundenbeziehung aufzubauen.</p>
            </div>
            <div class="popup-section">
                <div class="popup-section-title">üîë Wichtige Techniken</div>
                <ul>
                    <li><strong>Aktives Zuh√∂ren:</strong> Dem Kunden volle Aufmerksamkeit schenken, nachfragen, um das Problem wirklich zu verstehen, und das Geh√∂rte zusammenfassen ("Habe ich Sie richtig verstanden, dass...?").</li>
                    <li><strong>Zielgruppengerechte Kommunikation:</strong> Technische Details so erkl√§ren, dass ein Laie sie versteht. Vermeiden von Fachjargon oder diesen erkl√§ren.</li>
                    <li><strong>Fragetechniken:</strong>
                        <ul>
                            <li><strong>Offene Fragen (W-Fragen):</strong> F√∂rdern eine ausf√ºhrliche Antwort ("Welche Fehlermeldung wird genau angezeigt?").</li>
                            <li><strong>Geschlossene Fragen:</strong> Dienen der Best√§tigung ("Haben Sie den Computer schon neu gestartet?").</li>
                        </ul>
                    </li>
                    <li><strong>4-Ohren-Modell (Schulz von Thun):</strong> Bewusstsein daf√ºr schaffen, dass eine Nachricht auf vier Ebenen (Sach-, Beziehungs-, Selbstoffenbarungs-, Appell-Ebene) gesendet und empfangen wird, um Missverst√§ndnisse zu vermeiden.</li>
                    <li><strong>Einwandbehandlung:</strong> Einw√§nde des Kunden ernst nehmen, Verst√§ndnis zeigen und l√∂sungsorientiert darauf eingehen, statt sie abzutun.</li>
                </ul>
            </div>
        `,
        flashcard: { question: "Was ist der Unterschied zwischen offenen und geschlossenen Fragen in der Kundenberatung?", answer: "Offene Fragen (W-Fragen) fordern eine detaillierte Antwort. Geschlossene Fragen werden mit Ja/Nein beantwortet und dienen der Best√§tigung." }
    }
};