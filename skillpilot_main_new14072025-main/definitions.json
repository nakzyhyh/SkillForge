{
  "linienorganisation": {
    "title": "Linien-, Stab- & Matrixorganisation",
    "prüfungsteil": "AP1",
    "content": "<div class=\"popup-section\"><div class=\"popup-section-title\">📚 Überblick</div><p>Organisationsstrukturen legen fest, wie Aufgaben, Kompetenzen und Verantwortlichkeiten in einem Unternehmen verteilt sind. Die drei wichtigsten Grundformen sind die Linien-, Stab- und Matrixorganisation.</p></div><div class=\"popup-section\"><div class=\"popup-section-title\">📊 Vergleich der Strukturen</div><table class=\"comparison-table\"><thead><tr><th>Merkmal</th><th>Linienorganisation</th><th>Stabsorganisation</th><th>Matrixorganisation</th></tr></thead><tbody><tr><td><strong>Prinzip</strong></td><td>Einliniensystem (jeder hat <em>einen</em> Chef)</td><td>Erweitertes Einliniensystem mit beratenden Stäben</td><td>Mehrliniensystem (jeder hat <em>zwei</em> Chefs)</td></tr><tr><td><strong>Weisungsbefugnis</strong></td><td>Klar & eindeutig von oben nach unten</td><td>Linie hat Weisungsbefugnis, Stab nur Beratungsfunktion</td><td>Geteilte Weisungsbefugnis (funktional & projektbezogen)</td></tr><tr><td><strong>Vorteil</strong></td><td>Klare Struktur, eindeutige Verantwortung</td><td>Entlastung der Führung, besseres Fachwissen</td><td>Hohe Flexibilität, optimale Ressourcennutzung</td></tr><tr><td><strong>Nachteil</strong></td><td>Lange Dienstwege, unflexibel</td><td>Konflikte zwischen Stab und Linie, hohe Kosten</td><td>Kompetenzkonflikte, hoher Kommunikationsaufwand</td></tr></tbody></table></div><div class=\"example-box\"><strong>💻 IT-Beispiel:</strong><br>Ein Azubi in der <strong>Linienorganisation</strong> berichtet nur an seinen Ausbilder. In der <strong>Stabsorganisation</strong> könnte ein Datenschutz-Stab den IT-Leiter beraten. In der <strong>Matrixorganisation</strong> arbeitet der Azubi für seinen Ausbilder (Linie) UND für einen Projektleiter (Projekt).</div>"
  },
  "projektorganisation": {
    "title": "Projekt- vs. Linienorganisation",
    "prüfungsteil": "AP1",
    "content": "<div class=\"popup-section\"><div class=\"popup-section-title\">📚 Definition</div><p>Die <strong>Linienorganisation</strong> ist die dauerhafte, hierarchische Grundstruktur eines Unternehmens für das Tagesgeschäft. Die <strong>Projektorganisation</strong> ist eine temporäre, oft bereichsübergreifende Struktur, die für die Dauer eines bestimmten, einmaligen Projekts geschaffen wird.</p></div><div class=\"popup-section\"><div class=\"popup-section-title\">📊 Gegenüberstellung</div><table class=\"comparison-table\"><thead><tr><th>Kriterium</th><th>Linienorganisation</th><th>Projektorganisation</th></tr></thead><tbody><tr><td><strong>Dauer</strong></td><td>Dauerhaft</td><td>Temporär, zeitlich befristet</td></tr><tr><td><strong>Zweck</strong></td><td>Abwicklung des Tagesgeschäfts</td><td>Erreichung eines einmaligen, spezifischen Ziels</td></tr><tr><td><strong>Struktur</strong></td><td>Hierarchisch, stabil</td><td>Flexibel, oft teamorientiert</td></tr><tr><td><strong>Mitarbeiter</strong></td><td>Feste Abteilungszugehörigkeit</td><td>Temporäre Zuordnung aus verschiedenen Abteilungen</td></tr></tbody></table></div><div class=\"example-box\"><strong>💡 Beispiel:</strong> Das Entwickler-Team (Linie) wartet bestehende Software. Für die Entwicklung einer neuen App wird ein Projektteam (Projektorganisation) mit Mitgliedern aus Entwicklung, Marketing und Design gebildet. Nach dem Launch wird das Projektteam aufgelöst.</div>"
  },
  "kommunikationswege": {
    "title": "Kommunikations- & Entscheidungsprozesse",
    "prüfungsteil": "AP1",
    "content": "<div class=\"popup-section\"><div class=\"popup-section-title\">🗣️ Kommunikationswege</div><p>Beschreiben, wie Informationen im Unternehmen fließen.</p><ul><li><strong>Top-Down:</strong> Von der Führung zu den Mitarbeitern (z.B. Anweisungen, Unternehmensziele). Der klassische \"Dienstweg\".</li><li><strong>Bottom-Up:</strong> Von Mitarbeitern zur Führung (z.B. Feedback, Statusberichte, Probleme). Wichtig für agile Prozesse.</li><li><strong>Horizontal:</strong> Zwischen Kollegen auf derselben Ebene (z.B. Abstimmung zwischen Entwicklung und Testing).</li></ul></div><div class=\"popup-section\"><div class=\"popup-section-title\">🎯 Entscheidungsprozesse</div><p>Strukturierte Vorgehensweise, um eine Wahl zwischen Alternativen zu treffen.</p><ol><li><strong>Problem erkennen:</strong> Was ist die Herausforderung? (z.B. \"Unser Backupsystem ist veraltet.\")</li><li><strong>Informationen sammeln:</strong> Fakten und Daten zusammentragen (z.B. Kosten, technische Anforderungen, Recovery-Zeiten).</li><li><strong>Alternativen entwickeln:</strong> Mögliche Lösungswege aufzeigen (z.B. Make-or-Buy, Cloud vs. On-Premise).</li><li><strong>Alternativen bewerten:</strong> Vor- und Nachteile abwägen (z.B. mittels Nutzwertanalyse, TCO-Rechnung).</li><li><strong>Entscheidung treffen:</strong> Die beste Alternative auswählen.</li><li><strong>Umsetzung & Kontrolle:</strong> Die Entscheidung ausführen und den Erfolg überprüfen (z.B. ROI-Analyse, Sicherstellung der RTO/RPO).</li></ol></div>"
  },
  "it-abteilung": {
    "title": "Rolle der IT-Abteilung",
    "prüfungsteil": "AP1",
    "content": "<div class=\"popup-section\"><div class=\"popup-section-title\">🏢 Die IT im Unternehmen</div><p>Die IT-Abteilung ist heute meist mehr als nur ein \"Reparaturservice\". Sie agiert als interner Dienstleister und strategischer Partner für andere Abteilungen, um Geschäftsprozesse zu optimieren und zu digitalisieren.</p></div><div class=\"popup-section\"><div class=\"popup-section-title\">🔧 Kernaufgaben</div><ul><li><strong>Infrastruktur-Management:</strong> Bereitstellung und Wartung von Servern, Netzwerken, Clients und der Cloud-Umgebung.</li><li><strong>Anwendungsbetreuung:</strong> Support und Weiterentwicklung von Unternehmenssoftware (z.B. ERP-System, CRM).</li><li><strong>User-Support (Helpdesk/Servicedesk):</strong> Anlaufstelle für Mitarbeiter bei IT-Problemen und Serviceanfragen.</li><li><strong>IT-Sicherheit:</strong> Schutz der Unternehmensdaten und -systeme (Firewalls, Virenschutz, Backups, Notfallpläne).</li><li><strong>Projektmanagement:</strong> Planung und Durchführung von IT-Projekten (z.B. Einführung neuer Software).</li><li><strong>Beratung (Business Alignment):</strong> Unterstützung anderer Abteilungen bei der Digitalisierung ihrer Prozesse.</li></ul></div>"
  },
  "cpm": {
    "title": "Critical Path Method (CPM)",
    "prüfungsteil": "AP1",
    "content": "<div class=\"popup-section\"><div class=\"popup-section-title\">📚 Definition</div><p>Die <strong>Critical Path Method (CPM)</strong> oder Methode des kritischen Pfades ist eine Technik zur Analyse und Planung von Projektabläufen. Ihr Ziel ist es, die längste Kette voneinander abhängiger Vorgänge zu identifizieren.</p></div><div class=\"popup-section\"><div class=\"popup-section-title\">🎯 Kernkonzept</div><p>Der <strong>kritische Pfad</strong> ist die Kette von Vorgängen, die die minimale Gesamtdauer des Projekts bestimmt. Vorgänge auf diesem Pfad haben <strong>keinen Puffer (Pufferzeit = 0)</strong>. Jede Verzögerung bei einem dieser Vorgänge verzögert das gesamte Projekt.</p></div><div class=\"example-box\"><strong>💡 Beispiel:</strong> Stell dir vor, du baust ein Haus. Das Legen des Fundaments ist auf dem kritischen Pfad. Wenn sich das um 2 Tage verzögert, verzögert sich das gesamte Bauprojekt um 2 Tage. Das Streichen der Wände im Inneren hat vielleicht Puffer, da es parallel zu Arbeiten am Dach stattfinden kann.</div>"
  },
  "vorgangsknoten": {
    "title": "Vorgangsknoten-Netzpläne",
    "prüfungsteil": "AP1",
    "content": "<div class=\"popup-section\"><div class=\"popup-section-title\">📊 Visualisierung</div><p>Im <strong>Vorgangsknoten-Netzplan</strong> wird jeder Vorgang (jede Aufgabe) als Knoten (meist ein Rechteck) dargestellt. Die Pfeile zwischen den Knoten zeigen die Abhängigkeiten an.</p></div><div class=\"popup-section\"><div class=\"popup-section-title\">🖼️ Aufbau eines Knotens</div><div style=\"border: 2px solid; border-radius: 8px; padding: 10px; text-align: center;\"><table style=\"width:100%; font-size: 0.8em; text-align: center; border-collapse: collapse;\"><tr><td style=\"border: 1px solid; padding: 5px;\">FAZ</td><td style=\"border: 1px solid; padding: 5px;\">Dauer</td><td style=\"border: 1px solid; padding: 5px;\">FEZ</td></tr><tr><td colspan=\"3\" style=\"border: 1px solid; padding: 10px; font-weight: bold;\">Vorgangsbezeichnung</td></tr><tr><td style=\"border: 1px solid; padding: 5px;\">SAZ</td><td style=\"border: 1px solid; padding: 5px;\">GP</td><td style=\"border: 1px solid; padding: 5px;\">SEZ</td></tr></table></div></div><div class=\"popup-section\"><div class=\"popup-section-title\">📜 Legende</div><ul><li><strong>FAZ:</strong> Frühester Anfangszeitpunkt</li><li><strong>FEZ:</strong> Frühester Endzeitpunkt</li><li><strong>SAZ:</strong> Spätester Anfangszeitpunkt</li><li><strong>SEZ:</strong> Spätester Endzeitpunkt</li><li><strong>Dauer:</strong> Dauer des Vorgangs</li><li><strong>GP:</strong> Gesamtpuffer</li></ul></div>"
  },
  "frueheste-termine": {
    "title": "Früheste/Späteste Termine (Vorwärts- & Rückwärtsrechnung)",
    "prüfungsteil": "AP1",
    "content": "<div class=\"popup-section\"><div class=\"popup-section-title\">➡️ Vorwärtsrechnung (Früheste Termine)</div><p>Man rechnet vom Projektstart zum Projektende, um die frühestmöglichen Zeitpunkte zu ermitteln.</p><ul><li><strong>FAZ (Frühester Anfangszeitpunkt):</strong> Der höchste FEZ aller direkten Vorgänger. Für den Startknoten ist FAZ = 0.</li><li><strong>FEZ (Frühester Endzeitpunkt):</strong> Berechnet sich aus <strong>FAZ + Dauer</strong>.</li></ul></div><div class=\"popup-section\"><div class=\"popup-section-title\">⬅️ Rückwärtsrechnung (Späteste Termine)</div><p>Man rechnet vom Projektende zum Projektstart, um die spätestzulässigen Zeitpunkte zu ermitteln, ohne das Projekt zu verzögern.</p><ul><li><strong>SEZ (Spätester Endzeitpunkt):</strong> Der niedrigste SAZ aller direkten Nachfolger. Für den Endknoten gilt SEZ = FEZ.</li><li><strong>SAZ (Spätester Anfangszeitpunkt):</strong> Berechnet sich aus <strong>SEZ - Dauer</strong>.</li></ul></div>"
  },
  "pufferzeiten": {
    "title": "Pufferzeiten",
    "prüfungsteil": "AP1",
    "content": "<div class=\"popup-section\"><div class=\"popup-section-title\">📚 Definition</div><p>Die <strong>Pufferzeit</strong> ist der Zeitraum, um den ein Vorgang verschoben oder verlängert werden kann, ohne die Gesamtdauer des Projekts zu gefährden.</p></div><div class=\"popup-section\"><div class=\"popup-section-title\">🧮 Berechnung des Gesamtpuffers (GP)</div><p>Der Gesamtpuffer gibt die maximale Zeit an, die ein Vorgang benötigen darf, ohne das Projektende zu verschieben.</p><div class=\"formula-box\">GP = SAZ - FAZ <br><em>oder</em><br>GP = SEZ - FEZ</div></div><div class=\"example-box\"><strong>❗ Wichtig:</strong> Vorgänge auf dem kritischen Pfad haben immer einen Gesamtpuffer von <strong>0</strong>.</div>"
  },
  "ressourcenplanung": {
    "title": "Ressourcenplanung",
    "prüfungsteil": "AP1",
    "content": "<div class=\"popup-section\"><div class=\"popup-section-title\">📚 Definition</div><p>Die <strong>Ressourcenplanung</strong> befasst sich mit der Identifizierung, Zuweisung und Steuerung der für ein Projekt benötigten Ressourcen.</p></div><div class=\"popup-section\"><div class=\"popup-section-title\">📋 Arten von Ressourcen</div><ul><li><strong>Personal:</strong> Mitarbeiter mit bestimmten Fähigkeiten (z.B. Java-Entwickler, Netzwerktechniker).</li><li><strong>Sachmittel:</strong> Geräte, Maschinen, Softwarelizenzen, Räume.</li><li><strong>Finanzmittel:</strong> Das für das Projekt verfügbare Budget.</li></ul></div><div class=\"popup-section\"><div class=\"popup-section-title\">🎯 Ziele</div><ul><li>Sicherstellen, dass die richtigen Ressourcen zur richtigen Zeit verfügbar sind.</li><li>Vermeiden von <strong>Ressourcenkonflikten</strong> (z.B. ein Mitarbeiter ist für zwei Aufgaben gleichzeitig eingeplant).</li><li>Vermeiden von <strong>Ressourcenüberlastung</strong>.</li><li>Optimale Auslastung der Ressourcen.</li></ul></div>"
  },
  "teambildungsphasen": {
    "title": "Teambildungsphasen nach Tuckman",
    "prüfungsteil": "AP1",
    "content": "<div class=\"popup-section\"><div class=\"popup-section-title\">📚 Das Modell</div><p>Bruce Tuckman beschrieb 5 Phasen, die Teams typischerweise durchlaufen, um leistungsfähig zu werden.</p></div><div class=\"popup-section\"><div class=\"popup-section-title\">🔄 Die 5 Phasen</div><ol><li><strong>Forming (Orientierungsphase):</strong> Das Team lernt sich kennen. Man ist höflich, unsicher, und die Aufgaben sind noch unklar.</li><li><strong>Storming (Konfliktphase):</strong> Es kommt zu Konflikten um Rollen, Ziele und Vorgehensweisen. Cliquen können sich bilden. Diese Phase ist entscheidend für die spätere Leistungsfähigkeit.</li><li><strong>Norming (Organisationsphase):</strong> Das Team einigt sich auf gemeinsame Regeln, Strukturen und Arbeitsweisen. Der Teamgeist wächst.</li><li><strong>Performing (Leistungsphase):</strong> Das Team arbeitet effizient und zielorientiert zusammen. Probleme werden konstruktiv gelößt. Die Energie fließt in die Aufgabe.</li><li><strong>Adjourning (Auflösungsphase):</strong> Nach Projektende wird das Team aufgelöst. Es kommt zu einer emotionalen Phase des Abschieds.</li></ol></div><div class=\"example-box\"><strong>💡 Prüfungsfrage:</strong> \"Ein neues Projektteam streitet ständig über die richtige Programmiersprache. In welcher Phase nach Tuckman befindet sich das Team?\"<br><strong>Antwort:</strong> Storming.</div>"
  },
  "kommunikationsmodelle": {
    "title": "Kommunikationsmodelle (4-Ohren-Modell)",
    "prüfungsteil": "AP1",
    "content": "<div class=\"popup-section\"><div class=\"popup-section-title\">📚 Das 4-Ohren-Modell</div><p>Entwickelt von Friedemann Schulz von Thun, besagt dieses Modell, dass <strong>jede Nachricht vier Ebenen (oder \"Ohren\")</strong> hat, auf denen sie gesendet und empfangen werden kann. Missverständnisse entstehen, wenn Sender und Empfänger auf unterschiedlichen Ebenen kommunizieren.</p></div><div class=\"popup-section\"><div class=\"popup-section-title\">👂 Die vier Ebenen</div><table class=\"comparison-table\"><thead><tr><th>Ebene</th><th>Was wird übermittelt?</th><th>Beispiel: \"Die Ampel ist grün.\"</th></tr></thead><tbody><tr><td><strong>Sachebene</strong></td><td>Die reine Information, Daten & Fakten.</td><td>\"Die Ampel zeigt die Farbe Grün.\"</td></tr><tr><td><strong>Selbstoffenbarung</strong></td><td>Was der Sender über sich selbst verrät (Gefühle, Zustand).</td><td>\"Ich habe es eilig.\"</td></tr><tr><td><strong>Beziehungsebene</strong></td><td>Was der Sender vom Empfänger hält und wie er zu ihm steht.</td><td>\"Du brauchst meine Hilfe beim Fahren.\"</td></tr><tr><td><strong>Appellebene</strong></td><td>Wozu der Sender den Empfänger veranlassen möchte.</td><td>\"Fahr los!\"</td></tr></tbody></table></div><div class=\"example-box\"><strong>⚠️ Konfliktpotenzial:</strong> Der Fahrer (Sender) sagt \"Die Ampel ist grün.\" (Sachebene). Die Beifahrerin (Empfänger) hört es auf der Beziehungsebene (\"Du hältst mich für eine schlechte Fahrerin!\") und reagiert verärgert, obwohl nur eine Information gemeint war.</div>"
  },
  "scrum_kanban": {
    "title": "Scrum und Kanban Grundlagen",
    "prüfungsteil": "AP1",
    "content": "<div class=\"popup-section\"><div class=\"popup-section-title\"> agile Methoden</div><p>Scrum und Kanban sind die populärsten agilen Vorgehensmodelle, die auf Flexibilität, kontinuierliche Verbesserung und schnelle Reaktionsfähigkeit auf Änderungen setzen.</p></div><div class=\"popup-section\"><div class=\"popup-section-title\">📊 Vergleich</div><table class=\"comparison-table\"><thead><tr><th>Aspekt</th><th>Scrum</th><th>Kanban</th></tr></thead><tbody><tr><td><strong>Grundprinzip</strong></td><td>Arbeit in festen Zyklen (Sprints)</td><td>Kontinuierlicher Fluss der Arbeit (Flow)</td></tr><tr><td><strong>Rollen</strong></td><td>Fest definiert: Product Owner, Scrum Master, Entwicklungsteam</td><td>Keine festen Rollen vorgeschrieben</td></tr><tr><td><strong>Arbeitseinheiten</strong></td><td>Sprint Backlog wird zu Beginn des Sprints festgelegt</td><td>Aufgaben werden einzeln aus einem Backlog gezogen (Pull-Prinzip)</td></tr><tr><td><strong>Meetings</strong></td><td>Festgelegt: Sprint Planning, Daily Scrum, Sprint Review, Retrospective</td><td>Keine festen Meetings, oft aber \"Stand-ups\"</td></tr><tr><td><strong>Fokus</strong></td><td>Ein \"potenziell auslieferbares Inkrement\" am Ende jedes Sprints</td><td>Visualisierung des Workflows, Begrenzung der parallelen Arbeit (WIP-Limits)</td></tr></tbody></table></div><div class=\"example-box\"><strong>Scrum</strong> ist wie ein Restaurant, das alle 2 Wochen ein neues Menü plant und kocht. <strong>Kanban</strong> ist wie eine Sushi-Bar, bei der die Köche kontinuierlich die Teller auf dem Laufband nachfüllen, sobald einer genommen wird.</div>"
  },
  "feedback-techniken": {
    "title": "Feedback-Techniken",
    "prüfungsteil": "AP1",
    "content": "<div class=\"popup-section\"><div class=\"popup-section-title\">📚 Ziel von Feedback</div><p>Konstruktives Feedback soll eine Verhaltensänderung oder -bestätigung bewirken, ohne die Beziehung zu belasten. Es sollte immer beschreibend, konkret und subjektiv (\"Ich-Botschaften\") sein.</p></div><div class=\"popup-section\"><div class=\"popup-section-title\">🥪 Sandwich-Methode</div><p>Eine populäre, aber auch umstrittene Methode, bei der Kritik zwischen zwei positive Anmerkungen \"verpackt\" wird.</p><ol><li><strong>Positiver Einstieg:</strong> \"Ich finde es super, wie engagiert du im Projekt bist.\"</li><li><strong>Konstruktive Kritik:</strong> \"Mir ist aufgefallen, dass du in den letzten Meetings oft andere unterbrichst. Auf mich wirkt das so, als ob du ihre Ideen nicht wertschätzt.\"</li><li><strong>Positiver Abschluss:</strong> \"Ich bin aber zuversichtlich, dass wir das als Team gut hinbekommen.\"</li></ol><p><strong>⚠️ Kritik an der Methode:</strong> Die positiven Aussagen können unaufrichtig wirken und die eigentliche Kritik wird eventuell nicht ernst genommen.</p></div><div class=\"popup-section\"><div class=\"popup-section-title\">⭐ WWW-Feedback</div><p>Eine alternative, oft als besser empfundene Methode:</p><ul><li><strong>Wahrnehmung:</strong> Was habe ich konkret beobachtet? (\"Ich habe gesehen, dass die Dokumentation für Modul X fehlt.\")</li><li><strong>Wirkung:</strong> Welche Wirkung hatte das auf mich/das Team? (\"Das hat bei mir dazu geführt, dass ich eine Stunde länger gebraucht habe, um die Schnittstelle zu verstehen.\")</li><li><strong>Wunsch:</strong> Was wünsche ich mir für die Zukunft? (\"Ich wünsche mir, dass wir vereinbaren, die Doku direkt nach der Implementierung zu schreiben.\")</li></ul></div>"
  },
  "arbeitszeiten": {
    "title": "Arbeitszeiten & Ruhepausen (ArbZG)",
    "prüfungsteil": "AP1",
    "content": "<div class=\"popup-section\"><div class=\"popup-section-title\">⚖️ Arbeitszeitgesetz (ArbZG)</div><p>Das ArbZG regelt die grundlegenden Rechte und Pflichten bezüglich der Arbeitszeit in Deutschland zum Schutz der Arbeitnehmer.</p></div><div class=\"popup-section\"><div class=\"popup-section-title\">⏰ Kernaussagen</div><ul><li><strong>Tägliche Arbeitszeit:</strong> Grundsätzlich max. <strong>8 Stunden</strong> pro Werktag.</li><li><strong>Verlängerung:</strong> Kann auf bis zu <strong>10 Stunden</strong> verlängert werden, wenn innerhalb von 6 Monaten ein Durchschnitt von 8 Stunden pro Werktag nicht überschritten wird.</li><li><strong>Ruhepausen:</strong><ul><li>Bei 6 bis 9 Stunden Arbeit: mind. <strong>30 Minuten</strong> Pause.</li><li>Bei über 9 Stunden Arbeit: mind. <strong>45 Minuten</strong> Pause.</li><li>Die Pausen können in Blöcke von je 15 Minuten aufgeteilt werden.</li></ul></li><li><strong>Ruhezeit:</strong> Nach Beendigung der täglichen Arbeitszeit muss eine ununterbrochene Ruhezeit von mind. <strong>11 Stunden</strong> gewährt werden.</li></ul></div>"
  },
  "software-lizenzen": {
    "title": "Software-Lizenzarten",
    "prüfungsteil": "AP1",
    "content": "<div class=\"popup-section\"><div class=\"popup-section-title\">📚 Lizenz-Grundlagen</div><p>Eine Software-Lizenz ist ein Vertrag, der die Nutzungsrechte für eine Software regelt. Man unterscheidet grob zwischen proprietärer und freier/Open-Source-Software.</p></div><div class=\"popup-section\"><div class=\"popup-section-title\">📊 Lizenztypen im Vergleich</div><table class=\"comparison-table\"><thead><tr><th>Typ</th><th>Beschreibung</th><th>Beispiel</th></tr></thead><tbody><tr><td><strong>Proprietär</strong></td><td>Quellcode ist geheim, Nutzung stark eingeschränkt (oft pro Nutzer/Gerät), meist kostenpflichtig.</td><td>Microsoft Windows, Adobe Photoshop</td></tr><tr><td><strong>Freeware</strong></td><td>Kostenlos nutzbar, aber oft mit eingeschränkten Rechten (z.B. nur für private Nutzung). Quellcode nicht einsehbar.</td><td>CCleaner (Free Version)</td></tr><tr><td><strong>Open Source (Permissive)</strong></td><td>Quellcode ist offen. Software darf frei genutzt, verändert und weitergegeben werden, auch in kommerziellen Produkten. Wenig Pflichten.</td><td>MIT Lizenz, Apache 2.0</td></tr><tr><td><strong>Open Source (Copyleft)</strong></td><td>Quellcode ist offen. Abgeleitete Werke müssen ebenfalls unter derselben oder einer kompatiblen Lizenz veröffentlicht werden.</td><td>GPL (GNU General Public License)</td></tr></tbody></table></div>"
  },
  "dsgvo-artikel6": {
    "title": "DSGVO Art. 6 - Rechtmäßigkeit der Verarbeitung",
    "prüfungsteil": "AP1",
    "content": "<div class=\"popup-section\"><div class=\"popup-section-title\">⚖️ Grundprinzip</div><p>Die Verarbeitung personenbezogener Daten ist <strong>grundsätzlich verboten</strong>, es sei denn, es liegt eine Erlaubnis vor. Artikel 6 der DSGVO listet diese Erlaubnistatbestände auf.</p></div><div class=\"popup-section\"><div class=\"popup-section-title\">✅ Erlaubnistatbestände (Auswahl)</div><p>Die Verarbeitung ist nur rechtmäßig, wenn mindestens eine der folgenden Bedingungen erfüllt ist:</p><ul><li><strong>Einwilligung (lit. a):</strong> Die betroffene Person hat ihre freiwillige und informierte Einwilligung gegeben.</li><li><strong>Vertragserfüllung (lit. b):</strong> Die Verarbeitung ist für die Erfüllung eines Vertrags (z.B. Arbeitsvertrag, Kaufvertrag) notwendig.</li><li><strong>Rechtliche Verpflichtung (lit. c):</strong> Die Verarbeitung ist zur Erfüllung einer rechtlichen Pflicht erforderlich (z.B. steuerliche Aufbewahrungspflichten).</li><li><strong>Lebenswichtige Interessen (lit. d):</strong> Zum Schutz des Lebens oder der Gesundheit (z.B. Notfalldaten im Krankenhaus).</li><li><strong>Berechtigtes Interesse (lit. f):</strong> Die Verarbeitung ist zur Wahrung der berechtigten Interessen des Unternehmens erforderlich und die Interessen des Betroffenen überwiegen nicht (z.B. Videoüberwachung zur Diebstahlprävention).</li></ul></div>"
  },
  "it-sicherheitsgesetz": {
    "title": "IT-Sicherheitsgesetz (IT-SiG)",
    "prüfungsteil": "AP1",
    "content": "<div class=\"popup-section\"><div class=\"popup-section-title\">📚 Ziel des Gesetzes</div><p>Das IT-Sicherheitsgesetz (aktuell IT-SiG 2.0) soll die Sicherheit informationstechnischer Systeme in Deutschland erhöhen. Ein besonderer Fokus liegt auf <strong>Kritischen Infrastrukturen (KRITIS)</strong>.</p></div><div class=\"popup-section\"><div class=\"popup-section-title\">🏭 Was ist KRITIS?</div><p>Kritische Infrastrukturen sind Organisationen und Einrichtungen mit wichtiger Bedeutung für das staatlichen Gemeinwesen, bei deren Ausfall oder Beeinträchtigung nachhaltig wirkende Versorgungsengpässe, erhebliche Störungen der öffentlichen Sicherheit oder andere dramatische Folgen eintreten würden.</p><p><strong>Sektoren sind z.B.:</strong> Energie, Wasser, Ernährung, Gesundheit, Transport, Finanzen und Informationstechnik.</p></div><div class=\"popup-section\"><div class=\"popup-section-title\">📋 Hauptpflichten für KRITIS-Betreiber</div><ul><li>Umsetzung von IT-Sicherheitsmaßnahmen nach dem <strong>Stand der Technik</strong>.</li><li>Regelmäßiger <strong>Nachweis</strong> der Umsetzung gegenüber dem BSI (Bundesamt für Sicherheit in der Informationstechnik).</li><li><strong>Meldung von erheblichen IT-Störungen</strong> an das BSI.</li><li>Benennung einer zentralen <strong>Kontaktstelle</strong>.</li></ul></div>"
  },
  "hardware-komponenten": {
    "title": "Hardware-Komponenten & Systemarchitektur",
    "prüfungsteil": "AP1",
    "content": "<div class=\"popup-section\"><div class=\"popup-section-title\">🖥️ Zentrale PC-Komponenten</div><table class=\"comparison-table\"><thead><tr><th>Komponente</th><th>Funktion & Wichtige Merkmale</th></tr></thead><tbody><tr><td><strong>CPU (Central Processing Unit)</strong></td><td>Das \"Gehirn\" des Computers. Führt Befehle aus. Kennzahlen: Taktfrequenz (GHz), Anzahl der Kerne, Cache.</td></tr><tr><td><strong>RAM (Random Access Memory)</strong></td><td>Flüchtiger Arbeitsspeicher für aktive Programme & Daten. Kennzahlen: Kapazität (GB), Geschwindigkeit (DDR-Typ, Taktrate).</td></tr><tr><td><strong>Storage (HDD/SSD)</strong></td><td>Nicht-flüchtiger Speicher. HDD (mechanisch, günstig, langsam), SSD (elektronisch, schnell, teurer).</td></tr><tr><td><strong>GPU (Graphics Processing Unit)</strong></td><td>Spezialisiert auf die Berechnung von Grafikdaten. Wichtig für Gaming, Design, KI.</td></tr></tbody></table></div><div class=\"popup-section\"><div class=\"popup-section-title\">🔌 Mainboard (Motherboard)</div><p>Die zentrale Platine, die alle Komponenten verbindet. Es fungiert als Rückgrat des Computers.</p><ul><li><strong>Prozessorsockel (CPU-Socket):</strong> Hier wird der Prozessor eingesetzt. Muss mit der CPU kompatibel sein.</li><li><strong>Chipsatz:</strong> Verbindet die CPU mit anderen Komponenten. Früher als North- und Southbridge bekannt, heute sind viele Funktionen direkt in die CPU integriert.</li><li><strong>Erweiterungssteckplätze:</strong> Früher PCI, heute der viel schnellere <strong>PCIe (PCI Express)</strong> für Grafikarten etc.</li><li><strong>Speicheranschlüsse:</strong> Früher IDE, heute <strong>SATA</strong> (für HDDs/SSDs) und <strong>NVMe (M.2)</strong> für extrem schnelle SSDs.</li><li><strong>BIOS/UEFI:</strong> Die Firmware des Mainboards. Das moderne <strong>UEFI</strong> (Unified Extensible Firmware Interface) hat das alte BIOS abgelöst und bietet eine grafische Oberfläche und mehr Funktionen.</li></ul></div><div class=\"popup-section\"><div class=\"popup-section-title\">⚙️ Chronologischer Ablauf der CPU-Operationen</div><p>Jeder Befehl, den eine CPU verarbeitet, durchläuft einen Zyklus aus mehreren Schritten (Pipeline):</p><ol><li><strong>Instruction Fetch (Befehl holen):</strong> Der Befehl wird aus dem Speicher (RAM/Cache) geholt. Der <strong>Programmzähler (PC)</strong> zeigt dabei auf die Adresse des nächsten Befehls.</li><li><strong>Instruction Decode (Befehl dekodieren):</strong> Der Befehlsdecoder analysiert den Befehl und übersetzt ihn in Steuersignale für die CPU.</li><li><strong>Execute (Ausführen):</strong> Die <strong>ALU (Arithmetic Logic Unit)</strong> führt die eigentliche Operation aus (z.B. Addition, logisches UND).</li><li><strong>Write Back (Rückschreiben):</strong> Das Ergebnis der Operation wird zurück in ein Register geschrieben, um für weitere Befehle verfügbar zu sein.</li></ol></div>"
  },
  "tco": {
    "title": "Total Cost of Ownership (TCO)",
    "prüfungsteil": "AP1",
    "content": "<div class=\"popup-section\"><div class=\"popup-section-title\">📚 Definition</div><p>Der <strong>Total Cost of Ownership (TCO)</strong> ist eine Berschätzungsmethode, die nicht nur die Anschaffungskosten, sondern <strong>alle Kosten</strong> berücksichtigt, die über die gesamte Lebensdauer einer IT-Anschaffung anfallen.</p></div><div class=\"popup-section\"><div class=\"popup-section-title\">➕ Kostenarten</div><ul><li><strong>Direkte Kosten (sichtbar):</strong><ul><li>Anschaffung (Hardware, Software)</li><li>Installation & Implementierung</li><li>Wartung & Supportverträge</li></ul></li><li><strong>Indirekte Kosten (oft unsichtbar):</strong><ul><li>Betriebskosten (Strom, Kühlung)</li><li>Personalkosten (Schulung, Administration)</li><li>Ausfallzeiten & Produktivitätsverluste</li><li>Entsorgungskosten</li></ul></li></ul></div><div class=\"example-box\"><strong>💻 Beispiel:</strong> Ein \"billiger\" Server (geringe Anschaffungskosten) kann einen hohen TCO haben, wenn er viel Strom verbraucht und häufig gewartet werden muss. Ein teurerer, energieeffizienter Server kann langfristig günstiger sein.</div>"
  },
  "roi": {
    "title": "Return on Investment (ROI)",
    "prüfungsteil": "AP1",
    "content": "<div class=\"popup-section\"><div class=\"popup-section-title\">📚 Definition</div><p>Der <strong>Return on Investment (ROI)</strong> ist eine Kennzahl, die die Rentabilität einer Investition misst. Sie zeigt, wie viel Prozent des eingesetzten Kapitals als Gewinn zurückgeflossen ist.</p></div><div class=\"popup-section\"><div class=\"popup-section-title\">🧮 Formel</div><div class=\"formula-box\">ROI (%) = (Gewinn / Investitionskosten) × 100</div></div><div class=\"popup-section\"><div class=\"popup-section-title\">🎯 Interpretation</div><ul><li><strong>ROI > 0%:</strong> Die Investition war rentabel.</li><li><strong>ROI = 0%:</strong> Weder Gewinn noch Verlust.</li><li><strong>ROI < 0%:</strong> Die Investition hat zu einem Verlust geführt.</li></ul></div><div class=\"example-box\"><strong>🔧 Beispiel:</strong> Eine Investition von 20.000 € in eine neue Software bringt einen Gewinn (z.B. durch Prozesseinsparungen) von 30.000 €. <br>ROI = (30.000 € / 20.000 €) × 100 = 150%.<br>Jeder investierte Euro hat 1,50 € Gewinn erbracht.</div>"
  },
  "amortisation": {
    "title": "Amortisationszeit (Payback Period)",
    "prüfungsteil": "AP1",
    "content": "<div class=\"popup-section\"><div class=\"popup-section-title\">📚 Definition</div><p>Die <strong>Amortisationszeit</strong> gibt an, wie lange es dauert, bis die ursprünglichen Anschaffungskosten einer Investition durch die daraus resultierenden Einnahmen oder Einsparungen (Cashflows) vollständig zurückverdient sind.</p></div><div class=\"popup-section\"><div class=\"popup-section-title\">🧮 Formel (vereinfacht)</div><div class=\"formula-box\">Amortisationszeit (in Jahren) = Anschaffungskosten / Jährliche Einsparungen</div></div><div class=\"popup-section\"><div class=\"popup-section-title\">🎯 Bedeutung</div><p>Sie ist eine einfache Methode zur Risikobewertung: <strong>Je kürzer die Amortisationszeit, desto schneller ist das investierte Kapital wieder „sicher“ und desto geringer das Risiko.</strong></p></div><div class=\"example-box\"><strong>💻 Beispiel:</strong> Ein neuer Server kostet 10.000 €. Er spart pro Jahr 2.500 € an Strom- und Wartungskosten.<br>Amortisationszeit = 10.000 € / 2.500 € pro Jahr = 4 Jahre.</div>"
  },
  "make-or-buy": {
    "title": "Make-or-Buy-Entscheidung",
    "prüfungsteil": "AP1",
    "content": "<div class=\"popup-section\"><div class=\"popup-section-title\">📚 Definition</div><p>Die <strong>Make-or-Buy-Entscheidung</strong> ist die strategische Überlegung, ob ein Produkt oder eine Dienstleistung selbst erstellt (Make) oder von einem externen Anbieter eingekauft wird (Buy).</p></div><div class=\"popup-section\"><div class=\"popup-section-title\">⚖️ Entscheidungskriterien</div><table class=\"comparison-table\"><thead><tr><th>Faktor</th><th>Pro \"Make\" (Selbstmachen)</th><th>Pro \"Buy\" (Einkaufen)</th></tr></thead><tbody><tr><td><strong>Kosten</strong></td><td>Langfristig potenziell günstiger, keine Gewinnmarge für Dritte.</td><td>Keine hohen Anfangsinvestitionen, Skaleneffekte des Anbieters.</td></tr><tr><td><strong>Know-how</strong></td><td>Schutz von Betriebsgeheimnissen, Aufbau eigener Kompetenzen.</td><td>Zugriff auf Expertenwissen, man muss nicht alles selbst können.</td></tr><tr><td><strong>Qualität</strong></td><td>Volle Kontrolle über den Prozess und die Qualität.</td><td>Anbieter ist oft hochspezialisiert und liefert Top-Qualität.</td></tr><tr><td><strong>Fokus</strong></td><td>Unabhängigkeit von Lieferanten.</td><td>Konzentration auf das eigene Kerngeschäft.</td></tr></tbody></table></div><div class=\"example-box\"><strong>💻 IT-Beispiel:</strong> Soll ein Unternehmen seine eigene Buchhaltungssoftware entwickeln (Make) oder eine Standardlösung wie DATEV oder SAP kaufen (Buy)?</div>"
  },
  "virtualisierung": {
    "title": "Virtualisierung (Hypervisor & Container)",
    "prüfungsteil": "AP1",
    "content": "<div class=\"popup-section\"><div class=\"popup-section-title\">📚 Grundlagen</div><p>Virtualisierung ermöglicht das Betreiben mehrerer Betriebssysteme oder Umgebungen auf einer physischen Hardware. Man unterscheidet Hypervisor-Typen (Typ 1 direkt auf Hardware, Typ 2 auf einem Host-Betriebssystem) und Container-Virtualisierung (leichter, isoliert Prozesse).</p></div><div class=\"popup-section\"><div class=\"popup-section-title\">⚖️ Vergleich</div><table class=\"comparison-table\"><thead><tr><th>Art</th><th>Hypervisor Typ 1</th><th>Hypervisor Typ 2</th><th>Container</th></tr></thead><tbody><tr><td>Installationsort</td><td>Direkt auf Hardware</td><td>Auf Host-OS</td><td>Auf Host-OS ohne eigenen Kernel</td></tr><tr><td>Performance</td><td>Höher</td><td>Geringfügig niedriger</td><td>Sehr hoch, nahe Native</td></tr><tr><td>Isolierung</td><td>Stark</td><td>Mittel</td><td>Prozessbasiert</td></tr></tbody></table></div>"
  },
  "cloud_computing": {
    "title": "Cloud Computing Modelle (IaaS, PaaS, SaaS)",
    "prüfungsteil": "AP1",
    "content": "<div class=\"popup-section\"><div class=\"popup-section-title\">☁️ Service-Modelle</div><ul><li><strong>IaaS:</strong> Infrastruktur als Dienst (z.B. VM, Storage).</li><li><strong>PaaS:</strong> Plattform als Dienst (z.B. Laufzeitumgebungen, Middleware).</li><li><strong>SaaS:</strong> Software als Dienst (z.B. gehostete Anwendungen).</li></ul></div><div class=\"popup-section\"><div class=\"popup-section-title\">🔄 Bereitstellungsmodelle</div><ul><li><strong>Öffentliche Cloud</strong></li><li><strong>Private Cloud</strong></li><li><strong>Hybrid Cloud</strong></li></ul></div>"
  },
  "itil_prozesse": {
    "title": "Grundlagen ITIL & IT-Service-Management",
    "prüfungsteil": "AP1",
    "content": "<div class=\"popup-section\"><div class=\"popup-section-title\">📚 ITIL-Zyklus</div><ol><li>Service Strategy</li><li>Service Design</li><li>Service Transition</li><li>Service Operation</li><li>Continual Service Improvement</li></ol></div><div class=\"popup-section\"><div class=\"popup-section-title\">🗝️ Kernprozesse</div><ul><li>Incident Management</li><li>Problem Management</li><li>Change Management</li><li>Configuration Management (CMDB)</li><li>Service Level Management (SLM)</li></ul></div>"
  },
  "containerisierung": {
    "title": "Containerisierung mit Docker & Kubernetes",
    "prüfungsteil": "AP1",
    "content": "<div class=\"popup-section\"><div class=\"popup-section-title\">🐳 Docker-Grundlagen</div><p>Docker-Container bündeln Anwendungen und Abhängigkeiten in Images, definiert über ein Dockerfile.</p></div><div class=\"popup-section\"><div class=\"popup-section-title\">☸️ Kubernetes-Grundlagen</div><p>Kubernetes orchestriert Container über Pods, Services, Deployments und ReplicaSets für Skalierung und Ausfallsicherheit.</p></div>"
  },
  "netzwerksicherheit": {
    "title": "VPN, Firewall & IDS-Grundlagen",
    "prüfungsteil": "AP1",
    "content": "<div class=\"popup-section\"><div class=\"popup-section-title\">🔒 VPN-Typen</div><ul><li>Site-to-Site VPN</li><li>Client-to-Site VPN</li><li>SSL VPN</li></ul></div><div class=\"popup-section\"><div class=\"popup-section-title\">🔥 Firewall-Typen</div><ul><li>Packet-Filter</li><li>Stateful Inspection</li><li>Application Layer Firewall</li></ul></div><div class=\"popup-section\"><div class=\"popup-section-title\">🚨 IDS vs. IPS</div><ul><li><strong>IDS:</strong> Detektiert Angriffe und meldet.</li><li><strong>IPS:</strong> Reagiert automatisch (Blockieren, Quarantäne).</li></ul></div>"
  },
  "versionierung": {
    "title": "Versionskontrolle mit Git",
    "prüfungsteil": "AP1",
    "content": "<div class=\"popup-section\"><div class=\"popup-section-title\">🔄 Grundlegende Befehle</div><ul><li><code>git init</code></li><li><code>git clone</code></li><li><code>git add</code></li><li><code>git commit</code></li><li><code>git push</code></li><li><code>git pull</code></li></ul></div><div class=\"popup-section\"><div class=\"popup-section-title\">🌲 Branching-Strategie</div><p>Feature-Branches, Git-Flow (Master, Develop, Feature, Release, Hotfix).</p></div>"
  },
  "monitoring_logging": {
    "title": "Monitoring & Logging (SNMP, Zabbix)",
    "prüfungsteil": "AP1",
    "content": "<div class=\"popup-section\"><div class=\"popup-section-title\">📊 Monitoring</div><p>Überwachung von Systemen und Netzwerken mit SNMP, Zabbix oder Nagios zur Früherkennung von Ausfällen.</p></div><div class=\"popup-section\"><div class=\"popup-section-title\">📝 Logging</div><p>Zentralisiertes Log-Management (ELK-Stack) und Analyse zur Fehlerdiagnose.</p></div>"
  },
  "cicd_pipelines": {
    "title": "CI/CD-Pipelines (Jenkins, GitLab CI, Build/Release-Automatisierung)",
    "prüfungsteil": "AP1",
    "content": "<div class=\"popup-section\"><div class=\"popup-section-title\">🔄 CI/CD-Pipelines</div><p>Continuous Integration (CI) und Continuous Delivery/Deployment (CD) automatisieren Build-, Test- und Release-Prozesse. Tools wie Jenkins und GitLab CI ermöglichen definierte Pipelines als Code.</p></div><div class=\"popup-section\"><div class=\"popup-section-title\">🛠️ Komponenten einer Pipeline</div><ul><li><strong>Build:</strong> Kompilieren und Verpacken des Codes.</li><li><strong>Test:</strong> Automatisierte Unit-, Integrations- und End-to-End-Tests.</li><li><strong>Deploy:</strong> Bereitstellung in Test-, Staging- und Produktionsumgebungen.</li><li><strong>Release:</strong> Versionierung, Rollback-Strategien und Release-Management.</li></ul></div>"
  },
  "scripting_automatisierung": {
    "title": "Scripting & Automatisierung (Bash, PowerShell, Python für Admin-Tasks)",
    "prüfungsteil": "AP1",
    "content": "<div class=\"popup-section\"><div class=\"popup-section-title\">💻 Scripting & Automatisierung</div><p>Skripte vereinfachen wiederkehrende System- und Netzwerkaufgaben. Häufig genutzte Sprachen sind Bash (Linux), PowerShell (Windows) und Python (plattformübergreifend).</p></div><div class=\"popup-section\"><div class=\"popup-section-title\">🔄 Typische Anwendungsfälle</div><ul><li>Benutzer- und Rechteverwaltung (LDAP, AD).</li><li>Backup- und Wartungsroutinen.</li><li>Monitoring-Checks und Alarmierungen.</li><li>Log-Analyse und Berichterstellung.</li></ul></div>"
  },
  "authentifizierungsverfahren": {
    "title": "Authentifizierungsverfahren (LDAP/Active Directory, RADIUS, OAuth2)",
    "prüfungsteil": "AP1",
    "content": "<div class=\"popup-section\"><div class=\"popup-section-title\">🔐 Authentifizierungsverfahren</div><p>Verfahren und Protokolle zur Identitätsprüfung von Benutzern und Geräten.</p></div><div class=\"popup-section\"><div class=\"popup-section-title\">📋 Wichtige Protokolle</div><ul><li><strong>LDAP/Active Directory:</strong> Verzeichnisdienste für zentrale Benutzerverwaltung.</li><li><strong>RADIUS:</strong> Netzwerkzugangskontrolle, insbesondere für VPN/WLAN.</li><li><strong>OAuth2:</strong> Token-basierte Autorisierung für APIs und Webanwendungen.</li></ul></div>"
  },
  "verschluesselung_pki": {
    "title": "Verschlüsselung & PKI (SSL/TLS, Zertifikatsmanagement)",
    "prüfungsteil": "AP1",
    "content": "<div class=\"popup-section\"><div class=\"popup-section-title\">🔒 Verschlüsselung & PKI</div><p>Techniken zur Sicherung der Datenübertragung und -speicherung mittels asymmetrischer und symmetrischer Verfahren.</p></div><div class=\"popup-section\"><div class=\"popup-section-title\">📚 SSL/TLS & Zertifikate</div><ul><li><strong>SSL/TLS:</strong> Protokolle für sichere Verbindungen (HTTPS, SMTP, etc.).</li><li><strong>PKI:</strong> Public Key Infrastructure zur Ausstellung, Verwaltung und Widerruf von Zertifikaten.</li><li><strong>Zertifikatsmanagement:</strong> Erstellung von CSRs, CA-Integration, Verlängerung und Revocation.</li></ul></div>"
  },
  "storage_konzepte": {
    "title": "Storage-Konzepte (RAID-Typen, SAN vs. NAS)",
    "prüfungsteil": "AP1",
    "content": "<div class=\"popup-section\"><div class=\"popup-section-title\">💾 Storage-Konzepte</div><p>Unterschiedliche Architekturen für Datenspeicherung und -zugriff in Unternehmen.</p></div><div class=\"popup-section\"><div class=\"popup-section-title\">📊 RAID-Typen</div><ul><li><strong>RAID 0:</strong> Striping, keine Redundanz, hohe Leistung.</li><li><strong>RAID 1:</strong> Mirroring, vollständige Spiegelung, hohe Redundanz.</li><li><strong>RAID 5:</strong> Striping mit Parität, Ausfallsicherheit und Effizienz.</li><li><strong>RAID 6:</strong> Doppelparität für zwei Festplattenausfälle.</li></ul></div><div class=\"popup-section\"><div class=\"popup-section-title\">🌐 SAN vs. NAS</div><ul><li><strong>SAN:</strong> Block-basiertes Storage über Fibre Channel oder iSCSI.</li><li><strong>NAS:</strong> File-basiertes Storage über NFS, SMB/CIFS.</li></ul></div>"
  },
  "netzwerkprotokolle": {
    "title": "Netzwerkprotokolle (DHCP, DNS, SNMP)",
    "prüfungsteil": "AP1",
    "content": "<div class=\"popup-section\"><div class=\"popup-section-title\">📡 Netzwerkprotokolle</div><p>Protokolle zur Verwaltung und Überwachung von Netzwerkinfrastrukturen.</p></div><div class=\"popup-section\"><div class=\"popup-section-title\">📝 Wichtige Protokolle</div><ul><li><strong>DHCP:</strong> Dynamische Zuweisung von IP-Adressen und Netzwerkkonfiguration.</li><li><strong>DNS:</strong> Auflösung von Domainnamen in IP-Adressen und umgekehrt.</li><li><strong>SNMP:</strong> Simple Network Management Protocol für Monitoring und Management von Netzwerkgeräten.</li></ul></div>"
  },
  "hochverfuegbarkeit_clustering": {
    "title": "Hochverfügbarkeit & Clustering (Failover-Cluster, Load Balancer)",
    "prüfungsteil": "AP1",
    "content": "<div class=\"popup-section\"><div class=\"popup-section-title\">🌟 Hochverfügbarkeit & Clustering</div><p>Architekturen zur Minimierung von Ausfällen und Maximierung der Systemverfügbarkeit.</p></div><div class=\"popup-section\"><div class=\"popup-section-title\">🔀 Techniken</div><ul><li><strong>Failover-Cluster:</strong> Automatisches Umschalten auf Backup-Server bei Ausfall.</li><li><strong>Load Balancer:</strong> Lastverteilung auf mehrere Server für Performance und Redundanz.</li><li><strong>Heartbeat & Health Checks:</strong> Überwachung der Knoten im Cluster.</li></ul></div>"
  }
}